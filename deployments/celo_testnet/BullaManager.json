{
  "address": "0x1b4DB52FD952F70d3D28bfbd406dB71940eD8cA9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_description",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_feeBasisPoints",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevBullaToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newBullaToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "BullaTokenChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevCollector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCollector",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "CollectorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "FeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevFeeThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFeeThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "FeeThresholdChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaGroup",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "groupType",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "requireMembership",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "NewBullaGroup",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "ReducedFeeChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bullaToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "groupType",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "requireMembership",
          "type": "bool"
        }
      ],
      "name": "createBullaGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeInfo",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "collectionAddress",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "feeBasisPoints",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "bullaThreshold",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "reducedFeeBasisPoints",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_holder",
          "type": "address"
        }
      ],
      "name": "getBullaBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_bullaTokenAddress",
          "type": "address"
        }
      ],
      "name": "setBullaTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_collectionAddress",
          "type": "address"
        }
      ],
      "name": "setCollectionAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_feeBasisPoints",
          "type": "uint32"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "reducedFeeBasisPoints",
          "type": "uint32"
        }
      ],
      "name": "setReducedFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_threshold",
          "type": "uint32"
        }
      ],
      "name": "setbullaThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7b8b019935cbdf0b7ce939cd3e730eafb4ecd4ab2ccb5bdecff433ef5fe7d8e6",
  "receipt": {
    "to": null,
    "from": "0xe2B28b58cc5d34872794E861fd1ba1982122B907",
    "contractAddress": "0x1b4DB52FD952F70d3D28bfbd406dB71940eD8cA9",
    "transactionIndex": 0,
    "gasUsed": "2199435",
    "logsBloom": "0x
    "blockHash": "0xe301bf072969bd6936522569e79cec8dd0a59765faaa47cf65b2f85b4a84d7bc",
    "transactionHash": "0x7b8b019935cbdf0b7ce939cd3e730eafb4ecd4ab2ccb5bdecff433ef5fe7d8e6",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6654176,
        "transactionHash": "0x7b8b019935cbdf0b7ce939cd3e730eafb4ecd4ab2ccb5bdecff433ef5fe7d8e6",
        "address": "0x1b4DB52FD952F70d3D28bfbd406dB71940eD8cA9",
        "topics": [
          "0x920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e323",
          "0x0000000000000000000000001b4db52fd952f70d3d28bfbd406db71940ed8ca9"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006112daf8",
        "logIndex": 0,
        "blockHash": "0xe301bf072969bd6936522569e79cec8dd0a59765faaa47cf65b2f85b4a84d7bc"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6654176,
        "transactionHash": "0x7b8b019935cbdf0b7ce939cd3e730eafb4ecd4ab2ccb5bdecff433ef5fe7d8e6",
        "address": "0x1b4DB52FD952F70d3D28bfbd406dB71940eD8cA9",
        "topics": [
          "0x28fa443c78eecff2421a89aee0a09ea0d05ad6bb15491e6d8b46c24084bab01e",
          "0x0000000000000000000000001b4db52fd952f70d3d28bfbd406db71940ed8ca9"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000089e03e7980c92fd81ed3a9b72f5c73fdf57e5e6d000000000000000000000000000000000000000000000000000000006112daf8",
        "logIndex": 1,
        "blockHash": "0xe301bf072969bd6936522569e79cec8dd0a59765faaa47cf65b2f85b4a84d7bc"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6654176,
        "transactionHash": "0x7b8b019935cbdf0b7ce939cd3e730eafb4ecd4ab2ccb5bdecff433ef5fe7d8e6",
        "address": "0x1b4DB52FD952F70d3D28bfbd406dB71940eD8cA9",
        "topics": [
          "0x39186e51606070376273fb5a61f17af17684b1c771b7c32a6ee725284d1a28e4",
          "0x0000000000000000000000001b4db52fd952f70d3d28bfbd406db71940ed8ca9"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e2b28b58cc5d34872794e861fd1ba1982122b907000000000000000000000000000000000000000000000000000000006112daf8",
        "logIndex": 2,
        "blockHash": "0xe301bf072969bd6936522569e79cec8dd0a59765faaa47cf65b2f85b4a84d7bc"
      }
    ],
    "blockNumber": 6654176,
    "cumulativeGasUsed": "2199435",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x66726f6d2068617264686174206465706c6f7900000000000000000000000000",
    "0x89e03E7980C92fd81Ed3A9b72F5c73fDf57E5e6D",
    0
  ],
  "solcInputHash": "0c1d53cdb68ef7e1ef81f3b1568572fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_description\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_feeBasisPoints\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevBullaToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBullaToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"BullaTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevCollector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"CollectorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"FeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevFeeThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeeThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"FeeThresholdChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaGroup\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"groupType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"requireMembership\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"NewBullaGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"ReducedFeeChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bullaToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"groupType\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"requireMembership\",\"type\":\"bool\"}],\"name\":\"createBullaGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeInfo\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"feeBasisPoints\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bullaThreshold\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"reducedFeeBasisPoints\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"getBullaBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_bullaTokenAddress\",\"type\":\"address\"}],\"name\":\"setBullaTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_collectionAddress\",\"type\":\"address\"}],\"name\":\"setCollectionAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_feeBasisPoints\",\"type\":\"uint32\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"reducedFeeBasisPoints\",\"type\":\"uint32\"}],\"name\":\"setReducedFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_threshold\",\"type\":\"uint32\"}],\"name\":\"setbullaThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BullaManager.sol\":\"BullaManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"contracts/BullaClaim.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.3;\\n\\nimport \\\"./BullaGroup.sol\\\";\\nimport \\\"./BullaManager.sol\\\";\\n\\ncontract BullaClaim {\\n    enum ActionType {Payment, Reject, Rescind}\\n    enum Status {Pending, Repaying, Paid, Rejected, Rescinded}\\n    enum RejectReason {\\n        None,\\n        UnknownAddress,\\n        DisputedClaim,\\n        SuspectedFraud,\\n        Other\\n    }\\n\\n    //structure for storing IPFS hash that may hold documents\\n    struct Multihash {\\n        bytes32 hash;\\n        uint8 hashFunction;\\n        uint8 size;\\n    }\\n    Multihash public multihash;\\n\\n    uint256 public bullaId; //parent bullaId\\n    address public bullaGroup; //parent bullaGroup\\n\\n    address payable public owner; //current owner of claim\\n    address payable public creditor;\\n    address payable public debtor;\\n\\n    uint256 public claimAmount;\\n    uint256 public dueBy;\\n    uint256 public paidAmount;\\n    Status public status;\\n\\n    //current price that owner is willing to transfer claim\\n    uint256 public transferPrice;\\n\\n    modifier onlyCreditor() {\\n        require(creditor == msg.sender, \\\"restricted to creditor wallet\\\");\\n        _;\\n    }\\n\\n    modifier onlyDebtor() {\\n        require(debtor == msg.sender, \\\"restricted to debtor wallet\\\");\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"restricted to owning wallet\\\");\\n        _;\\n    }\\n\\n    event ClaimAction(\\n        address indexed bullaManager,\\n        address indexed bullaGroup,\\n        uint256 indexed bullaId,\\n        address bullaClaim,\\n        ActionType actionType,\\n        uint256 paymentAmount,\\n        RejectReason rejectReason,\\n        uint256 blocktime\\n    );\\n\\n    event FeePaid(\\n        address indexed bullaManager,\\n        address indexed bullaClaim,\\n        address indexed collectionAddress,\\n        uint256 transactionFee,\\n        uint256 blocktime\\n    );\\n\\n    event MultihashAdded(\\n        address indexed bullaManager,\\n        address bullaClaim,\\n        Multihash ipfsHash,\\n        uint256 blocktime\\n    );\\n\\n    event TransferPriceUpdated(\\n        address indexed bullaClaim,\\n        uint256 oldPrice,\\n        uint256 newPrice,\\n        uint256 blocktime\\n    );\\n\\n    event ClaimTransferred(\\n        address indexed bullaClaim,\\n        address indexed oldOwner,\\n        address indexed newOwner,\\n        uint256 trasferPrice,\\n        uint256 blocktime\\n    );\\n\\n    constructor(\\n        uint256 _bullaId,\\n        address payable _owner,\\n        address payable _creditor,\\n        address payable _debtor,\\n        uint256 _claimAmount,\\n        uint256 _dueBy\\n    ) {\\n        bullaGroup = msg.sender;\\n        bullaId = _bullaId;\\n        owner = _owner;\\n        creditor = _creditor;\\n        debtor = _debtor;\\n        claimAmount = _claimAmount;\\n        dueBy = _dueBy;\\n    }\\n\\n    function setTransferPrice(uint256 newPrice) external onlyOwner {\\n        require(owner == creditor, \\\"only owner can set price\\\");\\n        uint256 oldPrice = transferPrice;\\n        transferPrice = newPrice;\\n        emit TransferPriceUpdated(\\n            address(this),\\n            oldPrice,\\n            newPrice,\\n            block.timestamp\\n        );\\n    }\\n\\n    function transferOwnership(address payable newOwner) external payable {\\n        require(owner == creditor, \\\"only invoices can be transferred\\\");\\n        require(\\n            transferPrice > 0 || msg.sender == owner,\\n            \\\"this claim is not transferable by anyone other than owner\\\"\\n        );\\n        require(\\n            msg.value == transferPrice,\\n            \\\"incorrect msg.value to transfer ownership\\\"\\n        );\\n\\n        //TODO: is this done in the correct order. Is it safe?\\n        owner.transfer(msg.value);\\n        address oldOwner = owner;\\n        owner = newOwner;\\n        creditor = newOwner;\\n        transferPrice = 0;\\n\\n        emit ClaimTransferred(\\n            address(this),\\n            oldOwner,\\n            newOwner,\\n            msg.value,\\n            block.timestamp\\n        );\\n    }\\n\\n    function addMultihash(\\n        bytes32 hash,\\n        uint8 hashFunction,\\n        uint8 size\\n    ) external onlyOwner {\\n        multihash = Multihash(hash, hashFunction, size);\\n        emit MultihashAdded(\\n            getBullaManager(),\\n            address(this),\\n            multihash,\\n            block.timestamp\\n        );\\n    }\\n\\n    function getBullaManager() internal view returns (address) {\\n        BullaGroup _bullaGroup = BullaGroup(bullaGroup);\\n        return _bullaGroup.bullaManager();\\n    }\\n\\n    function getFeeInfo() public view returns (uint256, address payable) {\\n        BullaManager bullaManager = BullaManager(getBullaManager());\\n        uint256 bullaTokenBalance = bullaManager.getBullaBalance(owner);\\n        (\\n            address payable collectionAddress,\\n            uint32 fullFee,\\n            uint32 bullaThreshold,\\n            uint32 reducedFeeBasisPoints\\n        ) = bullaManager.feeInfo();\\n\\n        uint32 fee =\\n            bullaThreshold > 0 && bullaTokenBalance >= bullaThreshold\\n                ? reducedFeeBasisPoints\\n                : fullFee;\\n        return (fee, collectionAddress);\\n    }\\n\\n    function calculateFee(uint256 bpFee, uint256 value)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        return (value * bpFee) / 10000;\\n    }\\n\\n    function emitActionEvent(\\n        ActionType actionType,\\n        uint256 _paymentAmount,\\n        RejectReason reason\\n    ) internal {\\n        emit ClaimAction(\\n            getBullaManager(),\\n            bullaGroup,\\n            bullaId,\\n            address(this),\\n            actionType,\\n            _paymentAmount,\\n            reason,\\n            block.timestamp\\n        );\\n    }\\n\\n    function payClaim() external payable onlyDebtor {\\n        require(paidAmount + msg.value <= claimAmount, \\\"repaying too much\\\");\\n        require(msg.value > 0, \\\"payment must be greater than 0\\\");\\n\\n        (uint256 feeBasisPoints, address payable collectionAddress) =\\n            getFeeInfo();\\n\\n        uint256 transactionFee =\\n            feeBasisPoints > 0 ? calculateFee(feeBasisPoints, msg.value) : 0;\\n        address bullaManager = getBullaManager();\\n\\n        creditor.transfer(msg.value - transactionFee);\\n        emitActionEvent(ActionType.Payment, claimAmount, RejectReason.None);\\n        paidAmount += msg.value;\\n        paidAmount == claimAmount ? status = Status.Paid : status = Status\\n            .Repaying;\\n\\n        if (transactionFee > 0) {\\n            collectionAddress.transfer(transactionFee);\\n        }\\n        emit FeePaid(\\n            bullaManager,\\n            address(this),\\n            collectionAddress,\\n            transactionFee,\\n            block.timestamp\\n        );\\n    }\\n\\n    function rejectClaim(RejectReason reason) external payable onlyDebtor {\\n        require(\\n            status == Status.Pending,\\n            \\\"cannot reject once payment has been made\\\"\\n        );\\n        status = Status.Rejected;\\n        emitActionEvent(ActionType.Reject, 0, reason);\\n    }\\n\\n    function rescindClaim() external payable onlyCreditor {\\n        require(\\n            status == Status.Pending,\\n            \\\"cannot rescind once payment has been made\\\"\\n        );\\n        status = Status.Rescinded;\\n        emitActionEvent(ActionType.Rescind, 0, RejectReason.None);\\n    }\\n}\\n\",\"keccak256\":\"0x9ec41056eb60aaf02927042cb42057ce16585f70f3f9d216759e5add6d3594a9\",\"license\":\"UNLICENSED\"},\"contracts/BullaGroup.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.3;\\n\\nimport \\\"./BullaClaim.sol\\\";\\n\\ncontract BullaGroup {\\n    mapping(uint256 => address) public bullaOwners;\\n    uint256 bullaCount = 0;\\n\\n    mapping(address => bool) public isMember;\\n    bool public immutable requireMembership;\\n\\n    bytes32 public immutable groupType;\\n    address public immutable bullaManager;\\n    address public immutable owner;\\n\\n    event NewBulla(\\n        address indexed bullaManager,\\n        address indexed bullaGroup,\\n        uint256 bullaId,\\n        address indexed owner,\\n        string description,\\n        uint256 ownerFunding,\\n        uint256 blocktime\\n    );\\n\\n    event NewBullaClaim(\\n        address indexed bullaManager,\\n        address bullaGroup,\\n        uint256 bullaId,\\n        address bullaClaim,\\n        address owner,\\n        address indexed creditor,\\n        address indexed debtor,\\n        string description,\\n        uint256 claimAmount,\\n        uint256 dueBy,\\n        uint256 blocktime\\n    );\\n\\n    event Membership(\\n        address indexed groupAddress,\\n        address walletAddress,\\n        bool isMember,\\n        uint256 blocktime\\n    );\\n\\n    constructor(\\n        address _bullaManager,\\n        address _owner,\\n        bytes32 _groupType,\\n        bool _requireMembership\\n    ) {\\n        owner = _owner;\\n        bullaManager = _bullaManager;\\n        isMember[_owner] = true;\\n        requireMembership = _requireMembership;\\n        groupType = _groupType;\\n    }\\n\\n    function joinGroup() external {\\n        require(isMember[msg.sender] != true, \\\"members cannot join a group\\\");\\n        isMember[msg.sender] = true;\\n        emit Membership(address(this), msg.sender, true, block.timestamp);\\n    }\\n\\n    function leaveGroup() external {\\n        require(\\n            isMember[msg.sender] == true,\\n            \\\"non-members cannot leave a group\\\"\\n        );\\n        require(msg.sender != owner, \\\"owners cannot leave a group\\\");\\n        isMember[msg.sender] = false;\\n        emit Membership(address(this), msg.sender, false, block.timestamp);\\n    }\\n\\n    function createBulla(string calldata desc, uint256 ownerFunding) external {\\n        if (requireMembership)\\n            require(\\n                isMember[msg.sender] == true,\\n                \\\"non-members cannot make journal\\\"\\n            );\\n        uint256 newBullaId = bullaCount;\\n\\n        //bullas[newBullaId].id = newBullaId;\\n        bullaOwners[newBullaId] = msg.sender;\\n        bullaCount++;\\n\\n        emit NewBulla(\\n            bullaManager,\\n            address(this),\\n            newBullaId,\\n            msg.sender,\\n            desc,\\n            ownerFunding,\\n            block.timestamp\\n        );\\n    }\\n\\n    function createBullaClaim(\\n        uint256 bullaId,\\n        uint256 claimAmount,\\n        address payable creditor,\\n        address payable debtor,\\n        string memory description,\\n        uint256 dueBy\\n    ) public {\\n        require(bullaOwners[bullaId] != address(0), \\\"bulla does not exist\\\");\\n        require(\\n            bullaOwners[bullaId] == msg.sender,\\n            \\\"only bulla owner's may create a bulla claim\\\"\\n        );\\n\\n        BullaClaim newBullaClaim =\\n            new BullaClaim(\\n                bullaId,\\n                payable(msg.sender),\\n                creditor,\\n                debtor,\\n                claimAmount,\\n                dueBy\\n            );\\n\\n        emit NewBullaClaim(\\n            bullaManager,\\n            address(this),\\n            bullaId,\\n            address(newBullaClaim),\\n            msg.sender,\\n            creditor,\\n            debtor,\\n            description,\\n            claimAmount,\\n            dueBy,\\n            block.timestamp\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xc58702eddddc671a87bac7b53cbe1a8a106ed7238b239dee0c135c58ababf995\",\"license\":\"UNLICENSED\"},\"contracts/BullaManager.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./BullaGroup.sol\\\";\\n\\nstruct FeeInfo {\\n    address payable collectionAddress;\\n    uint32 feeBasisPoints;\\n    uint32 bullaThreshold; //# of BULLA tokens held to get fee reduction\\n    uint32 reducedFeeBasisPoints; //reduced fee for BULLA token holders\\n}\\n\\ncontract BullaManager {\\n    bytes32 public immutable description;\\n    FeeInfo public feeInfo;\\n    IERC20 public bullaToken;\\n    address public owner;\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"restricted to contract owner\\\");\\n        _;\\n    }\\n\\n    event NewBullaGroup(\\n        address indexed bullaManager,\\n        address indexed bullaGroup,\\n        address owner,\\n        string description,\\n        bytes32 groupType,\\n        bool requireMembership,\\n        uint256 blocktime\\n    );\\n    event FeeChanged(\\n        address indexed bullaManager,\\n        uint256 prevFee,\\n        uint256 newFee,\\n        uint256 blocktime\\n    );\\n    event CollectorChanged(\\n        address indexed bullaManager,\\n        address prevCollector,\\n        address newCollector,\\n        uint256 blocktime\\n    );\\n    event OwnerChanged(\\n        address indexed bullaManager,\\n        address prevOwner,\\n        address newOwner,\\n        uint256 blocktime\\n    );\\n    event BullaTokenChanged(\\n        address indexed bullaManager,\\n        address prevBullaToken,\\n        address newBullaToken,\\n        uint256 blocktime\\n    );\\n    event FeeThresholdChanged(\\n        address indexed bullaManager,\\n        uint256 prevFeeThreshold,\\n        uint256 newFeeThreshold,\\n        uint256 blocktime\\n    );\\n    event ReducedFeeChanged(\\n        address indexed bullaManager,\\n        uint256 prevFee,\\n        uint256 newFee,\\n        uint256 blocktime\\n    );\\n\\n    constructor(\\n        bytes32 _description,\\n        address payable _collectionAddress,\\n        uint32 _feeBasisPoints\\n    ) {\\n        owner = msg.sender;\\n        feeInfo.collectionAddress = _collectionAddress;\\n        description = _description;\\n        feeInfo.feeBasisPoints = _feeBasisPoints;\\n\\n        emit FeeChanged(address(this), 0, _feeBasisPoints, block.timestamp);\\n        emit CollectorChanged(\\n            address(this),\\n            address(0),\\n            _collectionAddress,\\n            block.timestamp\\n        );\\n        emit OwnerChanged(\\n            address(this),\\n            address(0),\\n            msg.sender,\\n            block.timestamp\\n        );\\n    }\\n\\n    function createBullaGroup(\\n        string calldata _description,\\n        bytes32 groupType,\\n        bool requireMembership\\n    ) external {\\n        BullaGroup newGroup =\\n            new BullaGroup(\\n                address(this),\\n                msg.sender,\\n                groupType,\\n                requireMembership\\n            );\\n        emit NewBullaGroup(\\n            address(this),\\n            address(newGroup),\\n            msg.sender,\\n            _description,\\n            groupType,\\n            requireMembership,\\n            block.timestamp\\n        );\\n    }\\n\\n    function setOwner(address _owner) external onlyOwner {\\n        owner = _owner;\\n        emit OwnerChanged(address(this), owner, _owner, block.timestamp);\\n    }\\n\\n    function setFee(uint32 _feeBasisPoints) external onlyOwner {\\n        uint32 oldFee = feeInfo.feeBasisPoints;\\n        feeInfo.feeBasisPoints = _feeBasisPoints;\\n        emit FeeChanged(\\n            address(this),\\n            oldFee,\\n            feeInfo.feeBasisPoints,\\n            block.timestamp\\n        );\\n    }\\n\\n    function setCollectionAddress(address payable _collectionAddress)\\n        external\\n        onlyOwner\\n    {\\n        feeInfo.collectionAddress = _collectionAddress;\\n        emit CollectorChanged(\\n            address(this),\\n            feeInfo.collectionAddress,\\n            _collectionAddress,\\n            block.timestamp\\n        );\\n    }\\n\\n    //Set threshold of BULLA tokens owned that are required to receive reduced fee\\n    function setbullaThreshold(uint32 _threshold) external onlyOwner {\\n        feeInfo.bullaThreshold = _threshold;\\n        emit FeeThresholdChanged(\\n            address(this),\\n            feeInfo.bullaThreshold,\\n            _threshold,\\n            block.timestamp\\n        );\\n    }\\n\\n    //reduced fee if threshold of BULLA tokens owned is met\\n    function setReducedFee(uint32 reducedFeeBasisPoints) external onlyOwner {\\n        uint32 oldFee = feeInfo.reducedFeeBasisPoints;\\n        feeInfo.reducedFeeBasisPoints = reducedFeeBasisPoints;\\n        emit FeeChanged(\\n            address(this),\\n            oldFee,\\n            feeInfo.feeBasisPoints,\\n            block.timestamp\\n        );\\n    }\\n\\n    //set the contract address of BULLA ERC20 token\\n    function setBullaTokenAddress(address payable _bullaTokenAddress)\\n        external\\n        onlyOwner\\n    {\\n        bullaToken = IERC20(_bullaTokenAddress);\\n        emit BullaTokenChanged(\\n            address(this),\\n            address(bullaToken),\\n            _bullaTokenAddress,\\n            block.timestamp\\n        );\\n    }\\n\\n    //get the amount of BULLA tokens held by a given address\\n    function getBullaBalance(address _holder) external view returns (uint256) {\\n        uint256 balance =\\n            address(bullaToken) == address(0)\\n                ? 0\\n                : bullaToken.balanceOf(_holder);\\n        return balance;\\n    }\\n}\\n\",\"keccak256\":\"0xd3e6059b0fd704be769a9d6e2c7d206219b438136841fac1514da298779fcc47\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516127b53803806127b583398101604081905261002f9161015a565b600280546001600160a01b0319163317905560008054608085905263ffffffff8316600160a01b026001600160c01b03199091166001600160a01b0385161717815560405130917f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e323916100bd91908590429092835263ffffffff919091166020830152604082015260600190565b60405180910390a260408051600081526001600160a01b03841660208201524281830152905130917f28fa443c78eecff2421a89aee0a09ea0d05ad6bb15491e6d8b46c24084bab01e919081900360600190a260408051600081523360208201524281830152905130917f39186e51606070376273fb5a61f17af17684b1c771b7c32a6ee725284d1a28e4919081900360600190a25050506101b0565b60008060006060848603121561016e578283fd5b835160208501519093506001600160a01b038116811461018c578283fd5b604085015190925063ffffffff811681146101a5578182fd5b809150509250925092565b6080516125ea6101cb600039600061010c01526125ea6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063995b5aae11610071578063995b5aae1461016c578063a6546d0e146101d9578063a6904aa5146101ec578063aadefd0e146101ff578063eb69615e14610212578063f10a317914610225576100b4565b80630309e65b146100b957806313af4035146100df5780631ab971ab146100f45780637284e416146101075780638b019f921461012e5780638da5cb5b14610141575b600080fd5b6100cc6100c7366004610719565b610238565b6040519081526020015b60405180910390f35b6100f26100ed366004610719565b6102da565b005b6100f26101023660046107d7565b610372565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b6100f261013c366004610719565b610415565b600254610154906001600160a01b031681565b6040516001600160a01b0390911681526020016100d6565b6000546101a3906001600160a01b0381169063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b604080516001600160a01b03909516855263ffffffff9384166020860152918316918401919091521660608201526080016100d6565b6100f26101e73660046107d7565b61049d565b6100f26101fa366004610719565b610534565b6100f261020d366004610735565b6105bc565b600154610154906001600160a01b031681565b6100f26102333660046107d7565b61066e565b60015460009081906001600160a01b0316156102d0576001546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a082319060240160206040518083038186803b15801561029357600080fd5b505afa1580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb91906107bf565b6102d3565b60005b9392505050565b6002546001600160a01b0316331461030d5760405162461bcd60e51b815260040161030490610851565b60405180910390fd5b600280546001600160a01b0319166001600160a01b038316908117909155604080518281526020810192909252429082015230907f39186e51606070376273fb5a61f17af17684b1c771b7c32a6ee725284d1a28e4906060015b60405180910390a250565b6002546001600160a01b0316331461039c5760405162461bcd60e51b815260040161030490610851565b6000805463ffffffff838116600160a01b90810263ffffffff60a01b198416179384905560408051938290048316808552919094049091166020830152429282019290925230907f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e323906060015b60405180910390a25050565b6002546001600160a01b0316331461043f5760405162461bcd60e51b815260040161030490610851565b600180546001600160a01b0319166001600160a01b038316908117909155604080518281526020810192909252429082015230907f0372929f77950d9d7af01484f77c437aaafdb1f22504ce8a66fa42d233862cc790606001610367565b6002546001600160a01b031633146104c75760405162461bcd60e51b815260040161030490610851565b6000805463ffffffff60c01b1916600160c01b63ffffffff848116828102939093179384905560408051929094041681526020810191909152429181019190915230907f1288d38590ededfeff607d9a0d70a08db1ef3baa2414283868ae007c582fab1d90606001610367565b6002546001600160a01b0316331461055e5760405162461bcd60e51b815260040161030490610851565b600080546001600160a01b0319166001600160a01b038316908117909155604080518281526020810192909252429082015230907f28fa443c78eecff2421a89aee0a09ea0d05ad6bb15491e6d8b46c24084bab01e90606001610367565b6000303384846040516105ce9061070c565b6001600160a01b039485168152939092166020840152604083015215156060820152608001604051809103906000f08015801561060f573d6000803e3d6000fd5b509050806001600160a01b0316306001600160a01b03167f66b8127c6e00807fb605798b9b3c03b87a4fdb64a2c7501524b755000074f15533888888884260405161065f969594939291906107fb565b60405180910390a35050505050565b6002546001600160a01b031633146106985760405162461bcd60e51b815260040161030490610851565b6000805463ffffffff838116600160e01b9081026001600160e01b038416179384905560408051919093048216808252600160a01b9094049091166020820152429181019190915230907f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e32390606001610409565b611d14806108a183390190565b60006020828403121561072a578081fd5b81356102d381610888565b6000806000806060858703121561074a578283fd5b843567ffffffffffffffff80821115610761578485fd5b818701915087601f830112610774578485fd5b813581811115610782578586fd5b886020828501011115610793578586fd5b602092830196509450508501359150604085013580151581146107b4578182fd5b939692955090935050565b6000602082840312156107d0578081fd5b5051919050565b6000602082840312156107e8578081fd5b813563ffffffff811681146102d3578182fd5b6001600160a01b038716815260a06020820181905281018590526000858760c084013760c0868301810191909152604082019490945291151560608301526080820152601f909201601f19169091010192915050565b6020808252601c908201527f7265737472696374656420746f20636f6e7472616374206f776e657200000000604082015260600190565b6001600160a01b038116811461089d57600080fd5b5056fe610100604052600060015534801561001657600080fd5b50604051611d14380380611d14833981016040819052610035916100a3565b6001600160601b0319606084811b821660e0529490941b90931660c0526001600160a01b039091166000908152600260205260409020805460ff1916600117905590151560f81b60805260a0526100f5565b80516001600160a01b038116811461009e57600080fd5b919050565b600080600080608085870312156100b8578384fd5b6100c185610087565b93506100cf60208601610087565b925060408501519150606085015180151581146100ea578182fd5b939692955090935050565b60805160f81c60a05160c05160601c60e05160601c611bc3610151600039600081816101a9015261064001526000818160f9015281816102d801526104950152600061017401526000818160bd01526102000152611bc36000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806384f046111161006657806384f046111461016f5780638da5cb5b146101a45780639ac79e0a146101cb578063a230c524146101d3578063cb1fb490146101f65761009e565b80634a36b554146100a35780635b84f789146100b85780635e39986f146100f4578063649149211461013357806370d1d3a91461015c575b600080fd5b6100b66100b1366004610735565b6101fe565b005b6100df7f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b61011b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100eb565b61011b6101413660046107a8565b6000602081905290815260409020546001600160a01b031681565b6100b661016a3660046107c0565b610345565b6101967f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100eb565b61011b7f000000000000000000000000000000000000000000000000000000000000000081565b6100b661050b565b6100df6101e1366004610712565b60026020526000908152604090205460ff1681565b6100b66105d1565b7f00000000000000000000000000000000000000000000000000000000000000001561028d573360009081526002602052604090205460ff16151560011461028d5760405162461bcd60e51b815260206004820152601f60248201527f6e6f6e2d6d656d626572732063616e6e6f74206d616b65206a6f75726e616c0060448201526064015b60405180910390fd5b60018054600081815260208190526040812080546001600160a01b0319163317905582549192906102bd83610991565b9190505550336001600160a01b0316306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8adc65560293304173b1f3ba3e78beabea960458a86c965b7e60c97555eafe56848888884260405161033795949392919061094b565b60405180910390a450505050565b6000868152602081905260409020546001600160a01b03166103a05760405162461bcd60e51b8152602060048201526014602482015273189d5b1b1848191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610284565b6000868152602081905260409020546001600160a01b0316331461041a5760405162461bcd60e51b815260206004820152602b60248201527f6f6e6c792062756c6c61206f776e65722773206d61792063726561746520612060448201526a62756c6c6120636c61696d60a81b6064820152608401610284565b600086338686898660405161042e90610705565b9586526001600160a01b039485166020870152928416604086015292166060840152608083019190915260a082015260c001604051809103906000f08015801561047c573d6000803e3d6000fd5b509050836001600160a01b0316856001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fc0d761127eb7bac4dcb9cf0ac7eb1e3f7a038dcd2baeaa24ea2c175af880b7d7308b86338a8e8b426040516104fa9897969594939291906108ad565b60405180910390a450505050505050565b3360009081526002602052604090205460ff161515600114156105705760405162461bcd60e51b815260206004820152601b60248201527f6d656d626572732063616e6e6f74206a6f696e20612067726f757000000000006044820152606401610284565b33600081815260026020908152604091829020805460ff19166001908117909155825193845290830152429082015230907f1df2cf570007953635d84156ff46a381ebc11f1580bead15aa768ed8e1b34ab9906060015b60405180910390a2565b3360009081526002602052604090205460ff1615156001146106355760405162461bcd60e51b815260206004820181905260248201527f6e6f6e2d6d656d626572732063616e6e6f74206c6561766520612067726f75706044820152606401610284565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106ae5760405162461bcd60e51b815260206004820152601b60248201527f6f776e6572732063616e6e6f74206c6561766520612067726f757000000000006044820152606401610284565b336000818152600260209081526040808320805460ff19169055805193845290830191909152429082015230907f1df2cf570007953635d84156ff46a381ebc11f1580bead15aa768ed8e1b34ab9906060016105c7565b6111a7806109e783390190565b600060208284031215610723578081fd5b813561072e816109ce565b9392505050565b600080600060408486031215610749578182fd5b833567ffffffffffffffff80821115610760578384fd5b818601915086601f830112610773578384fd5b813581811115610781578485fd5b876020828501011115610792578485fd5b6020928301989097509590910135949350505050565b6000602082840312156107b9578081fd5b5035919050565b60008060008060008060c087890312156107d8578182fd5b863595506020870135945060408701356107f1816109ce565b93506060870135610801816109ce565b9250608087013567ffffffffffffffff8082111561081d578384fd5b818901915089601f830112610830578384fd5b813581811115610842576108426109b8565b604051601f8201601f19908116603f0116810190838211818310171561086a5761086a6109b8565b816040528281528c6020848701011115610882578687fd5b826020860160208301378660208483010152809650505050505060a087013590509295509295509295565b6001600160a01b03898116825260208083018a9052888216604084015290871660608301526101006080830181905286519083018190526000918291905b8183101561090a578883018101518584016101200152918201916108eb565b508082111561091d578261012082860101525b60a0840196909652505060c081019290925260e0820152610120601f909201601f1916010195945050505050565b600086825260806020830152846080830152848660a08401378060a0868401015260a0601f19601f87011683010190508360408301528260608301529695505050505050565b60006000198214156109b157634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146109e357600080fd5b5056fe608060405234801561001057600080fd5b506040516111a73803806111a783398101604081905261002f916100a4565b60038054336001600160a01b0319918216179091556002969096556004805487166001600160a01b0396871617905560058054871694861694909417909355600680549095169190931617909255600755600855610102565b80516001600160a01b038116811461009f57600080fd5b919050565b60008060008060008060c087890312156100bc578182fd5b865195506100cc60208801610088565b94506100da60408801610088565b93506100e860608801610088565b92506080870151915060a087015190509295509295509295565b611096806101116000396000f3fe6080604052600436106101085760003560e01c8063830953ab116100955780639cb64a2d116100645780639cb64a2d14610291578063b075bdfa146102b1578063c14e5675146102f7578063e36db7851461030a578063f2fde38b1461032a57610108565b8063830953ab1461022f5780638da5cb5b146102455780638df50ae4146102655780639a5870b31461027b57610108565b8063200d2ed2116100dc578063200d2ed214610192578063264c74a5146101b95780633b23ea9c146101d95780636271a5811461021157806381cd81941461021957610108565b806202eab71461010d5780630bd7693d14610144578063103888091461014e57806312fa769f1461016e575b600080fd5b34801561011957600080fd5b5061012261033d565b604080519283526001600160a01b039091166020830152015b60405180910390f35b61014c61048e565b005b34801561015a57600080fd5b5061014c610169366004610f16565b6106f0565b34801561017a57600080fd5b5061018460095481565b60405190815260200161013b565b34801561019e57600080fd5b50600a546101ac9060ff1681565b60405161013b9190610f8e565b3480156101c557600080fd5b5061014c6101d4366004610ebc565b6107f8565b3480156101e557600080fd5b506003546101f9906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61014c610902565b34801561022557600080fd5b50610184600b5481565b34801561023b57600080fd5b5061018460075481565b34801561025157600080fd5b506004546101f9906001600160a01b031681565b34801561027157600080fd5b5061018460025481565b34801561028757600080fd5b5061018460085481565b34801561029d57600080fd5b506006546101f9906001600160a01b031681565b3480156102bd57600080fd5b506000546001546102d8919060ff8082169161010090041683565b6040805193845260ff928316602085015291169082015260600161013b565b61014c610305366004610ef7565b6109fe565b34801561031657600080fd5b506005546101f9906001600160a01b031681565b61014c610338366004610e4b565b610afa565b600080600061034a610cfb565b60048054604051630309e65b60e01b81526001600160a01b0391821692810192909252919250600091831690630309e65b9060240160206040518083038186803b15801561039757600080fd5b505afa1580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf9190610f2e565b9050600080600080856001600160a01b031663995b5aae6040518163ffffffff1660e01b815260040160806040518083038186803b15801561041057600080fd5b505afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610e67565b93509350935093506000808363ffffffff1611801561046d57508263ffffffff168610155b6104775783610479565b815b63ffffffff1698509396505050505050509091565b6006546001600160a01b031633146104ed5760405162461bcd60e51b815260206004820152601b60248201527f7265737472696374656420746f20646562746f722077616c6c6574000000000060448201526064015b60405180910390fd5b600754346009546104fe9190610fa1565b11156105405760405162461bcd60e51b81526020600482015260116024820152700e4cae0c2f2d2dcce40e8dede40daeac6d607b1b60448201526064016104e4565b600034116105905760405162461bcd60e51b815260206004820152601e60248201527f7061796d656e74206d7573742062652067726561746572207468616e2030000060448201526064016104e4565b60008061059b61033d565b9150915060008083116105af5760006105b9565b6105b98334610d81565b905060006105c5610cfb565b6005549091506001600160a01b03166108fc6105e18434610ff8565b6040518115909202916000818181858888f19350505050158015610609573d6000803e3d6000fd5b5061061960006007546000610da1565b346009600082825461062b9190610fa1565b90915550506007546009541461065057600a805460ff19166001908117909155610661565b600a805460ff191660029081179091555b5081156106a0576040516001600160a01b0384169083156108fc029084906000818181858888f1935050505015801561069e573d6000803e3d6000fd5b505b604080518381524260208201526001600160a01b03808616923092918516917f7b025f69f5843a875988abc4e248350e4e5d0ec876e181973034e7a5c5bad884910160405180910390a450505050565b6004546001600160a01b0316331461074a5760405162461bcd60e51b815260206004820152601b60248201527f7265737472696374656420746f206f776e696e672077616c6c6574000000000060448201526064016104e4565b6005546004546001600160a01b039081169116146107aa5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c79206f776e65722063616e20736574207072696365000000000000000060448201526064016104e4565b600b80549082905560408051828152602081018490524281830152905130917fad58c87bad083af5840976457eaf3e6ebfab644c0fba0250f991295f5e7e9e35919081900360600190a25050565b6004546001600160a01b031633146108525760405162461bcd60e51b815260206004820152601b60248201527f7265737472696374656420746f206f776e696e672077616c6c6574000000000060448201526064016104e4565b6040805160608101825284815260ff848116602083018190529084169190920181905260008590556001805461ffff1916909217610100909102179055610897610cfb565b60408051308152600054602082015260015460ff8082168385015260089190911c16606082015242608082015290516001600160a01b0392909216917f5143fcc7fdd681177c0156a4bda42cf72b4b9fd524aea941866e7e0a0d78687f9181900360a00190a2505050565b6005546001600160a01b0316331461095c5760405162461bcd60e51b815260206004820152601d60248201527f7265737472696374656420746f206372656469746f722077616c6c657400000060448201526064016104e4565b6000600a5460ff16600481111561098357634e487b7160e01b600052602160045260246000fd5b146109e25760405162461bcd60e51b815260206004820152602960248201527f63616e6e6f742072657363696e64206f6e6365207061796d656e7420686173206044820152686265656e206d61646560b81b60648201526084016104e4565b600a805460ff191660041790556109fc6002600080610da1565b565b6006546001600160a01b03163314610a585760405162461bcd60e51b815260206004820152601b60248201527f7265737472696374656420746f20646562746f722077616c6c6574000000000060448201526064016104e4565b6000600a5460ff166004811115610a7f57634e487b7160e01b600052602160045260246000fd5b14610add5760405162461bcd60e51b815260206004820152602860248201527f63616e6e6f742072656a656374206f6e6365207061796d656e7420686173206260448201526765656e206d61646560c01b60648201526084016104e4565b600a805460ff19166003179055610af76001600083610da1565b50565b6005546004546001600160a01b03908116911614610b5a5760405162461bcd60e51b815260206004820181905260248201527f6f6e6c7920696e766f696365732063616e206265207472616e7366657272656460448201526064016104e4565b6000600b541180610b7557506004546001600160a01b031633145b610be75760405162461bcd60e51b815260206004820152603960248201527f7468697320636c61696d206973206e6f74207472616e7366657261626c65206260448201527f7920616e796f6e65206f74686572207468616e206f776e65720000000000000060648201526084016104e4565b600b543414610c4a5760405162461bcd60e51b815260206004820152602960248201527f696e636f7272656374206d73672e76616c756520746f207472616e736665722060448201526806f776e6572736869760bc1b60648201526084016104e4565b6004546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610c83573d6000803e3d6000fd5b50600480546001600160a01b038381166001600160a01b031980841682179094556005805490941681179093556000600b5560408051348152426020820152919092169291839130917fc432da71cf07ddca9b6990a60d74e7cc2550a93bc44787d381aa5eca20a93b99910160405180910390a45050565b60035460408051635e39986f60e01b815290516000926001600160a01b0316918291635e39986f91600480820192602092909190829003018186803b158015610d4357600080fd5b505afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b9190610e2f565b91505090565b6000612710610d908484610fd9565b610d9a9190610fb9565b9392505050565b6002546003546001600160a01b0316610db8610cfb565b6001600160a01b03167f0e045288ed2dce5e7856d34adb92389085ac6a9bb154f64f310ee26a8f50703b3087878742604051610df8959493929190610f46565b60405180910390a4505050565b805163ffffffff81168114610e1957600080fd5b919050565b803560ff81168114610e1957600080fd5b600060208284031215610e40578081fd5b8151610d9a8161104b565b600060208284031215610e5c578081fd5b8135610d9a8161104b565b60008060008060808587031215610e7c578283fd5b8451610e878161104b565b9350610e9560208601610e05565b9250610ea360408601610e05565b9150610eb160608601610e05565b905092959194509250565b600080600060608486031215610ed0578283fd5b83359250610ee060208501610e1e565b9150610eee60408501610e1e565b90509250925092565b600060208284031215610f08578081fd5b813560058110610d9a578182fd5b600060208284031215610f27578081fd5b5035919050565b600060208284031215610f3f578081fd5b5051919050565b6001600160a01b038616815260a0810160038610610f6657610f66611025565b856020830152846040830152610f7b8461103b565b6060820193909352608001529392505050565b60208101610f9b8361103b565b91905290565b60008219821115610fb457610fb461100f565b500190565b600082610fd457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ff357610ff361100f565b500290565b60008282101561100a5761100a61100f565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60058110610af757610af7611025565b6001600160a01b0381168114610af757600080fdfea2646970667358221220c94e851a0bf2e1b5487007a678f8af4e3d56b37ef4b8c903b6f7682011b8348e64736f6c63430008030033a2646970667358221220f8959494844052caee14461a56ce03ad34194373869feeccf70511bf599bd87b64736f6c63430008030033a26469706673582212203f57ddab3405d9d502206db78d180b2c22758822c397a7fb2858e05536e1fb0264736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063995b5aae11610071578063995b5aae1461016c578063a6546d0e146101d9578063a6904aa5146101ec578063aadefd0e146101ff578063eb69615e14610212578063f10a317914610225576100b4565b80630309e65b146100b957806313af4035146100df5780631ab971ab146100f45780637284e416146101075780638b019f921461012e5780638da5cb5b14610141575b600080fd5b6100cc6100c7366004610719565b610238565b6040519081526020015b60405180910390f35b6100f26100ed366004610719565b6102da565b005b6100f26101023660046107d7565b610372565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b6100f261013c366004610719565b610415565b600254610154906001600160a01b031681565b6040516001600160a01b0390911681526020016100d6565b6000546101a3906001600160a01b0381169063ffffffff600160a01b8204811691600160c01b8104821691600160e01b9091041684565b604080516001600160a01b03909516855263ffffffff9384166020860152918316918401919091521660608201526080016100d6565b6100f26101e73660046107d7565b61049d565b6100f26101fa366004610719565b610534565b6100f261020d366004610735565b6105bc565b600154610154906001600160a01b031681565b6100f26102333660046107d7565b61066e565b60015460009081906001600160a01b0316156102d0576001546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a082319060240160206040518083038186803b15801561029357600080fd5b505afa1580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb91906107bf565b6102d3565b60005b9392505050565b6002546001600160a01b0316331461030d5760405162461bcd60e51b815260040161030490610851565b60405180910390fd5b600280546001600160a01b0319166001600160a01b038316908117909155604080518281526020810192909252429082015230907f39186e51606070376273fb5a61f17af17684b1c771b7c32a6ee725284d1a28e4906060015b60405180910390a250565b6002546001600160a01b0316331461039c5760405162461bcd60e51b815260040161030490610851565b6000805463ffffffff838116600160a01b90810263ffffffff60a01b198416179384905560408051938290048316808552919094049091166020830152429282019290925230907f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e323906060015b60405180910390a25050565b6002546001600160a01b0316331461043f5760405162461bcd60e51b815260040161030490610851565b600180546001600160a01b0319166001600160a01b038316908117909155604080518281526020810192909252429082015230907f0372929f77950d9d7af01484f77c437aaafdb1f22504ce8a66fa42d233862cc790606001610367565b6002546001600160a01b031633146104c75760405162461bcd60e51b815260040161030490610851565b6000805463ffffffff60c01b1916600160c01b63ffffffff848116828102939093179384905560408051929094041681526020810191909152429181019190915230907f1288d38590ededfeff607d9a0d70a08db1ef3baa2414283868ae007c582fab1d90606001610367565b6002546001600160a01b0316331461055e5760405162461bcd60e51b815260040161030490610851565b600080546001600160a01b0319166001600160a01b038316908117909155604080518281526020810192909252429082015230907f28fa443c78eecff2421a89aee0a09ea0d05ad6bb15491e6d8b46c24084bab01e90606001610367565b6000303384846040516105ce9061070c565b6001600160a01b039485168152939092166020840152604083015215156060820152608001604051809103906000f08015801561060f573d6000803e3d6000fd5b509050806001600160a01b0316306001600160a01b03167f66b8127c6e00807fb605798b9b3c03b87a4fdb64a2c7501524b755000074f15533888888884260405161065f969594939291906107fb565b60405180910390a35050505050565b6002546001600160a01b031633146106985760405162461bcd60e51b815260040161030490610851565b6000805463ffffffff838116600160e01b9081026001600160e01b038416179384905560408051919093048216808252600160a01b9094049091166020820152429181019190915230907f920eb1bd59249cc14185b0425c1a4c2749475b15272cb9b73451656ad168e32390606001610409565b611d14806108a183390190565b60006020828403121561072a578081fd5b81356102d381610888565b6000806000806060858703121561074a578283fd5b843567ffffffffffffffff80821115610761578485fd5b818701915087601f830112610774578485fd5b813581811115610782578586fd5b886020828501011115610793578586fd5b602092830196509450508501359150604085013580151581146107b4578182fd5b939692955090935050565b6000602082840312156107d0578081fd5b5051919050565b6000602082840312156107e8578081fd5b813563ffffffff811681146102d3578182fd5b6001600160a01b038716815260a06020820181905281018590526000858760c084013760c0868301810191909152604082019490945291151560608301526080820152601f909201601f19169091010192915050565b6020808252601c908201527f7265737472696374656420746f20636f6e7472616374206f776e657200000000604082015260600190565b6001600160a01b038116811461089d57600080fd5b5056fe610100604052600060015534801561001657600080fd5b50604051611d14380380611d14833981016040819052610035916100a3565b6001600160601b0319606084811b821660e0529490941b90931660c0526001600160a01b039091166000908152600260205260409020805460ff1916600117905590151560f81b60805260a0526100f5565b80516001600160a01b038116811461009e57600080fd5b919050565b600080600080608085870312156100b8578384fd5b6100c185610087565b93506100cf60208601610087565b925060408501519150606085015180151581146100ea578182fd5b939692955090935050565b60805160f81c60a05160c05160601c60e05160601c611bc3610151600039600081816101a9015261064001526000818160f9015281816102d801526104950152600061017401526000818160bd01526102000152611bc36000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806384f046111161006657806384f046111461016f5780638da5cb5b146101a45780639ac79e0a146101cb578063a230c524146101d3578063cb1fb490146101f65761009e565b80634a36b554146100a35780635b84f789146100b85780635e39986f146100f4578063649149211461013357806370d1d3a91461015c575b600080fd5b6100b66100b1366004610735565b6101fe565b005b6100df7f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b61011b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100eb565b61011b6101413660046107a8565b6000602081905290815260409020546001600160a01b031681565b6100b661016a3660046107c0565b610345565b6101967f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100eb565b61011b7f000000000000000000000000000000000000000000000000000000000000000081565b6100b661050b565b6100df6101e1366004610712565b60026020526000908152604090205460ff1681565b6100b66105d1565b7f00000000000000000000000000000000000000000000000000000000000000001561028d573360009081526002602052604090205460ff16151560011461028d5760405162461bcd60e51b815260206004820152601f60248201527f6e6f6e2d6d656d626572732063616e6e6f74206d616b65206a6f75726e616c0060448201526064015b60405180910390fd5b60018054600081815260208190526040812080546001600160a01b0319163317905582549192906102bd83610991565b9190505550336001600160a01b0316306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f8adc65560293304173b1f3ba3e78beabea960458a86c965b7e60c97555eafe56848888884260405161033795949392919061094b565b60405180910390a450505050565b6000868152602081905260409020546001600160a01b03166103a05760405162461bcd60e51b8152602060048201526014602482015273189d5b1b1848191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610284565b6000868152602081905260409020546001600160a01b0316331461041a5760405162461bcd60e51b815260206004820152602b60248201527f6f6e6c792062756c6c61206f776e65722773206d61792063726561746520612060448201526a62756c6c6120636c61696d60a81b6064820152608401610284565b600086338686898660405161042e90610705565b9586526001600160a01b039485166020870152928416604086015292166060840152608083019190915260a082015260c001604051809103906000f08015801561047c573d6000803e3d6000fd5b509050836001600160a01b0316856001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fc0d761127eb7bac4dcb9cf0ac7eb1e3f7a038dcd2baeaa24ea2c175af880b7d7308b86338a8e8b426040516104fa9897969594939291906108ad565b60405180910390a450505050505050565b3360009081526002602052604090205460ff161515600114156105705760405162461bcd60e51b815260206004820152601b60248201527f6d656d626572732063616e6e6f74206a6f696e20612067726f757000000000006044820152606401610284565b33600081815260026020908152604091829020805460ff19166001908117909155825193845290830152429082015230907f1df2cf570007953635d84156ff46a381ebc11f1580bead15aa768ed8e1b34ab9906060015b60405180910390a2565b3360009081526002602052604090205460ff1615156001146106355760405162461bcd60e51b815260206004820181905260248201527f6e6f6e2d6d656d626572732063616e6e6f74206c6561766520612067726f75706044820152606401610284565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106ae5760405162461bcd60e51b815260206004820152601b60248201527f6f776e6572732063616e6e6f74206c6561766520612067726f757000000000006044820152606401610284565b336000818152600260209081526040808320805460ff19169055805193845290830191909152429082015230907f1df2cf570007953635d84156ff46a381ebc11f1580bead15aa768ed8e1b34ab9906060016105c7565b6111a7806109e783390190565b600060208284031215610723578081fd5b813561072e816109ce565b9392505050565b600080600060408486031215610749578182fd5b833567ffffffffffffffff80821115610760578384fd5b818601915086601f830112610773578384fd5b813581811115610781578485fd5b876020828501011115610792578485fd5b6020928301989097509590910135949350505050565b6000602082840312156107b9578081fd5b5035919050565b60008060008060008060c087890312156107d8578182fd5b863595506020870135945060408701356107f1816109ce565b93506060870135610801816109ce565b9250608087013567ffffffffffffffff8082111561081d578384fd5b818901915089601f830112610830578384fd5b813581811115610842576108426109b8565b604051601f8201601f19908116603f0116810190838211818310171561086a5761086a6109b8565b816040528281528c6020848701011115610882578687fd5b826020860160208301378660208483010152809650505050505060a087013590509295509295509295565b6001600160a01b03898116825260208083018a9052888216604084015290871660608301526101006080830181905286519083018190526000918291905b8183101561090a578883018101518584016101200152918201916108eb565b508082111561091d578261012082860101525b60a0840196909652505060c081019290925260e0820152610120601f909201601f1916010195945050505050565b600086825260806020830152846080830152848660a08401378060a0868401015260a0601f19601f87011683010190508360408301528260608301529695505050505050565b60006000198214156109b157634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146109e357600080fd5b5056fe608060405234801561001057600080fd5b506040516111a73803806111a783398101604081905261002f916100a4565b60038054336001600160a01b0319918216179091556002969096556004805487166001600160a01b0396871617905560058054871694861694909417909355600680549095169190931617909255600755600855610102565b80516001600160a01b038116811461009f57600080fd5b919050565b60008060008060008060c087890312156100bc578182fd5b865195506100cc60208801610088565b94506100da60408801610088565b93506100e860608801610088565b92506080870151915060a087015190509295509295509295565b611096806101116000396000f3fe6080604052600436106101085760003560e01c8063830953ab116100955780639cb64a2d116100645780639cb64a2d14610291578063b075bdfa146102b1578063c14e5675146102f7578063e36db7851461030a578063f2fde38b1461032a57610108565b8063830953ab1461022f5780638da5cb5b146102455780638df50ae4146102655780639a5870b31461027b57610108565b8063200d2ed2116100dc578063200d2ed214610192578063264c74a5146101b95780633b23ea9c146101d95780636271a5811461021157806381cd81941461021957610108565b806202eab71461010d5780630bd7693d14610144578063103888091461014e57806312fa769f1461016e575b600080fd5b34801561011957600080fd5b5061012261033d565b604080519283526001600160a01b039091166020830152015b60405180910390f35b61014c61048e565b005b34801561015a57600080fd5b5061014c610169366004610f16565b6106f0565b34801561017a57600080fd5b5061018460095481565b60405190815260200161013b565b34801561019e57600080fd5b50600a546101ac9060ff1681565b60405161013b9190610f8e565b3480156101c557600080fd5b5061014c6101d4366004610ebc565b6107f8565b3480156101e557600080fd5b506003546101f9906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61014c610902565b34801561022557600080fd5b50610184600b5481565b34801561023b57600080fd5b5061018460075481565b34801561025157600080fd5b506004546101f9906001600160a01b031681565b34801561027157600080fd5b5061018460025481565b34801561028757600080fd5b5061018460085481565b34801561029d57600080fd5b506006546101f9906001600160a01b031681565b3480156102bd57600080fd5b506000546001546102d8919060ff8082169161010090041683565b6040805193845260ff928316602085015291169082015260600161013b565b61014c610305366004610ef7565b6109fe565b34801561031657600080fd5b506005546101f9906001600160a01b031681565b61014c610338366004610e4b565b610afa565b600080600061034a610cfb565b60048054604051630309e65b60e01b81526001600160a01b0391821692810192909252919250600091831690630309e65b9060240160206040518083038186803b15801561039757600080fd5b505afa1580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf9190610f2e565b9050600080600080856001600160a01b031663995b5aae6040518163ffffffff1660e01b815260040160806040518083038186803b15801561041057600080fd5b505afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610e67565b93509350935093506000808363ffffffff1611801561046d57508263ffffffff168610155b6104775783610479565b815b63ffffffff1698509396505050505050509091565b6006546001600160a01b031633146104ed5760405162461bcd60e51b815260206004820152601b60248201527f7265737472696374656420746f20646562746f722077616c6c6574000000000060448201526064015b60405180910390fd5b600754346009546104fe9190610fa1565b11156105405760405162461bcd60e51b81526020600482015260116024820152700e4cae0c2f2d2dcce40e8dede40daeac6d607b1b60448201526064016104e4565b600034116105905760405162461bcd60e51b815260206004820152601e60248201527f7061796d656e74206d7573742062652067726561746572207468616e2030000060448201526064016104e4565b60008061059b61033d565b9150915060008083116105af5760006105b9565b6105b98334610d81565b905060006105c5610cfb565b6005549091506001600160a01b03166108fc6105e18434610ff8565b6040518115909202916000818181858888f19350505050158015610609573d6000803e3d6000fd5b5061061960006007546000610da1565b346009600082825461062b9190610fa1565b90915550506007546009541461065057600a805460ff19166001908117909155610661565b600a805460ff191660029081179091555b5081156106a0576040516001600160a01b0384169083156108fc029084906000818181858888f1935050505015801561069e573d6000803e3d6000fd5b505b604080518381524260208201526001600160a01b03808616923092918516917f7b025f69f5843a875988abc4e248350e4e5d0ec876e181973034e7a5c5bad884910160405180910390a450505050565b6004546001600160a01b0316331461074a5760405162461bcd60e51b815260206004820152601b60248201527f7265737472696374656420746f206f776e696e672077616c6c6574000000000060448201526064016104e4565b6005546004546001600160a01b039081169116146107aa5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c79206f776e65722063616e20736574207072696365000000000000000060448201526064016104e4565b600b80549082905560408051828152602081018490524281830152905130917fad58c87bad083af5840976457eaf3e6ebfab644c0fba0250f991295f5e7e9e35919081900360600190a25050565b6004546001600160a01b031633146108525760405162461bcd60e51b815260206004820152601b60248201527f7265737472696374656420746f206f776e696e672077616c6c6574000000000060448201526064016104e4565b6040805160608101825284815260ff848116602083018190529084169190920181905260008590556001805461ffff1916909217610100909102179055610897610cfb565b60408051308152600054602082015260015460ff8082168385015260089190911c16606082015242608082015290516001600160a01b0392909216917f5143fcc7fdd681177c0156a4bda42cf72b4b9fd524aea941866e7e0a0d78687f9181900360a00190a2505050565b6005546001600160a01b0316331461095c5760405162461bcd60e51b815260206004820152601d60248201527f7265737472696374656420746f206372656469746f722077616c6c657400000060448201526064016104e4565b6000600a5460ff16600481111561098357634e487b7160e01b600052602160045260246000fd5b146109e25760405162461bcd60e51b815260206004820152602960248201527f63616e6e6f742072657363696e64206f6e6365207061796d656e7420686173206044820152686265656e206d61646560b81b60648201526084016104e4565b600a805460ff191660041790556109fc6002600080610da1565b565b6006546001600160a01b03163314610a585760405162461bcd60e51b815260206004820152601b60248201527f7265737472696374656420746f20646562746f722077616c6c6574000000000060448201526064016104e4565b6000600a5460ff166004811115610a7f57634e487b7160e01b600052602160045260246000fd5b14610add5760405162461bcd60e51b815260206004820152602860248201527f63616e6e6f742072656a656374206f6e6365207061796d656e7420686173206260448201526765656e206d61646560c01b60648201526084016104e4565b600a805460ff19166003179055610af76001600083610da1565b50565b6005546004546001600160a01b03908116911614610b5a5760405162461bcd60e51b815260206004820181905260248201527f6f6e6c7920696e766f696365732063616e206265207472616e7366657272656460448201526064016104e4565b6000600b541180610b7557506004546001600160a01b031633145b610be75760405162461bcd60e51b815260206004820152603960248201527f7468697320636c61696d206973206e6f74207472616e7366657261626c65206260448201527f7920616e796f6e65206f74686572207468616e206f776e65720000000000000060648201526084016104e4565b600b543414610c4a5760405162461bcd60e51b815260206004820152602960248201527f696e636f7272656374206d73672e76616c756520746f207472616e736665722060448201526806f776e6572736869760bc1b60648201526084016104e4565b6004546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610c83573d6000803e3d6000fd5b50600480546001600160a01b038381166001600160a01b031980841682179094556005805490941681179093556000600b5560408051348152426020820152919092169291839130917fc432da71cf07ddca9b6990a60d74e7cc2550a93bc44787d381aa5eca20a93b99910160405180910390a45050565b60035460408051635e39986f60e01b815290516000926001600160a01b0316918291635e39986f91600480820192602092909190829003018186803b158015610d4357600080fd5b505afa158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b9190610e2f565b91505090565b6000612710610d908484610fd9565b610d9a9190610fb9565b9392505050565b6002546003546001600160a01b0316610db8610cfb565b6001600160a01b03167f0e045288ed2dce5e7856d34adb92389085ac6a9bb154f64f310ee26a8f50703b3087878742604051610df8959493929190610f46565b60405180910390a4505050565b805163ffffffff81168114610e1957600080fd5b919050565b803560ff81168114610e1957600080fd5b600060208284031215610e40578081fd5b8151610d9a8161104b565b600060208284031215610e5c578081fd5b8135610d9a8161104b565b60008060008060808587031215610e7c578283fd5b8451610e878161104b565b9350610e9560208601610e05565b9250610ea360408601610e05565b9150610eb160608601610e05565b905092959194509250565b600080600060608486031215610ed0578283fd5b83359250610ee060208501610e1e565b9150610eee60408501610e1e565b90509250925092565b600060208284031215610f08578081fd5b813560058110610d9a578182fd5b600060208284031215610f27578081fd5b5035919050565b600060208284031215610f3f578081fd5b5051919050565b6001600160a01b038616815260a0810160038610610f6657610f66611025565b856020830152846040830152610f7b8461103b565b6060820193909352608001529392505050565b60208101610f9b8361103b565b91905290565b60008219821115610fb457610fb461100f565b500190565b600082610fd457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ff357610ff361100f565b500290565b60008282101561100a5761100a61100f565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60058110610af757610af7611025565b6001600160a01b0381168114610af757600080fdfea2646970667358221220c94e851a0bf2e1b5487007a678f8af4e3d56b37ef4b8c903b6f7682011b8348e64736f6c63430008030033a2646970667358221220f8959494844052caee14461a56ce03ad34194373869feeccf70511bf599bd87b64736f6c63430008030033a26469706673582212203f57ddab3405d9d502206db78d180b2c22758822c397a7fb2858e05536e1fb0264736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1013,
        "contract": "contracts/BullaManager.sol:BullaManager",
        "label": "feeInfo",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(FeeInfo)1008_storage"
      },
      {
        "astId": 1016,
        "contract": "contracts/BullaManager.sol:BullaManager",
        "label": "bullaToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 1018,
        "contract": "contracts/BullaManager.sol:BullaManager",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_struct(FeeInfo)1008_storage": {
        "encoding": "inplace",
        "label": "struct FeeInfo",
        "members": [
          {
            "astId": 1001,
            "contract": "contracts/BullaManager.sol:BullaManager",
            "label": "collectionAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 1003,
            "contract": "contracts/BullaManager.sol:BullaManager",
            "label": "feeBasisPoints",
            "offset": 20,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 1005,
            "contract": "contracts/BullaManager.sol:BullaManager",
            "label": "bullaThreshold",
            "offset": 24,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 1007,
            "contract": "contracts/BullaManager.sol:BullaManager",
            "label": "reducedFeeBasisPoints",
            "offset": 28,
            "slot": "0",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}