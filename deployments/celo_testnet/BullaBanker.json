{
  "address": "0xAA6E5B4E34f3C3BA4D90694909dca7DDdf058079",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bullaManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_claimImplementation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bullaBanker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "BullaBankerCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaClaim",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "updatedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "creditorTag",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "debtorTag",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "BullaTagUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bullaManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bullaTags",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "creditorTag",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "debtorTag",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimAmount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "debtor",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "bullaTag",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dueBy",
          "type": "uint256"
        }
      ],
      "name": "createBullaClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimAmount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "creditor",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "debtor",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "bullaTag",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dueBy",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "hashFunction",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "size",
              "type": "uint8"
            }
          ],
          "internalType": "struct Multihash",
          "name": "multihash",
          "type": "tuple"
        }
      ],
      "name": "createBullaClaimMultihash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bullaClaim",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "newTag",
          "type": "bytes32"
        }
      ],
      "name": "updateBullaTag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x756759c64ee09ed31f6dd7371a44fdcc260dae8c9755a9d4df5f4c66718d6c1a",
  "receipt": {
    "to": null,
    "from": "0xe2B28b58cc5d34872794E861fd1ba1982122B907",
    "contractAddress": "0xAA6E5B4E34f3C3BA4D90694909dca7DDdf058079",
    "transactionIndex": 1,
    "gasUsed": "708341",
    "logsBloom": "0x
    "blockHash": "0x59f3ba8756164dd3888f874ce153422f21ecd843257c30dbbf5de0d00258c700",
    "transactionHash": "0x756759c64ee09ed31f6dd7371a44fdcc260dae8c9755a9d4df5f4c66718d6c1a",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 7152490,
        "transactionHash": "0x756759c64ee09ed31f6dd7371a44fdcc260dae8c9755a9d4df5f4c66718d6c1a",
        "address": "0xAA6E5B4E34f3C3BA4D90694909dca7DDdf058079",
        "topics": [
          "0x1619502cc577464cafd2a9c68d834339b51934f3e8e684f59374dd5f0f9293d6",
          "0x000000000000000000000000d285f3645af07960c961b6dcbfe230ee686aa12f"
        ],
        "data": "0x000000000000000000000000aa6e5b4e34f3c3ba4d90694909dca7dddf058079000000000000000000000000000000000000000000000000000000006138e000",
        "logIndex": 2,
        "blockHash": "0x59f3ba8756164dd3888f874ce153422f21ecd843257c30dbbf5de0d00258c700"
      }
    ],
    "blockNumber": 7152490,
    "cumulativeGasUsed": "907053",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd285f3645Af07960C961B6DCBFe230Ee686aA12F",
    "0xCf4254cF35EB7F13B7e02bA774f5502f5f5C7A7d"
  ],
  "solcInputHash": "7e37fb7353b6089588d8e6340ffcf073",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bullaManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimImplementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bullaBanker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"BullaBankerCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaClaim\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"creditorTag\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"debtorTag\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"BullaTagUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bullaManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bullaTags\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"creditorTag\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"debtorTag\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"debtor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"bullaTag\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dueBy\",\"type\":\"uint256\"}],\"name\":\"createBullaClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"creditor\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"debtor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"bullaTag\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dueBy\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"hashFunction\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"internalType\":\"struct Multihash\",\"name\":\"multihash\",\"type\":\"tuple\"}],\"name\":\"createBullaClaimMultihash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bullaClaim\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"newTag\",\"type\":\"bytes32\"}],\"name\":\"updateBullaTag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BullaBanker.sol\":\"BullaBanker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\"},\"contracts/BullaBanker.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\n\\nstruct BullaTag {\\n    bytes32 creditorTag;\\n    bytes32 debtorTag;\\n}\\nstruct Multihash {\\n    bytes32 hash;\\n    uint8 hashFunction;\\n    uint8 size;\\n}\\n\\ninterface IBullaClaim {\\n    function init(\\n        address _bullaManager,\\n        address payable _owner,\\n        address payable _creditor,\\n        address payable _debtor,\\n        string memory _description,\\n        uint256 _claimAmount,\\n        uint256 _dueBy\\n    ) external;\\n\\n    function initMultihash(\\n        address _bullaManager,\\n        address payable _owner,\\n        address payable _creditor,\\n        address payable _debtor,\\n        string memory _description,\\n        uint256 _claimAmount,\\n        uint256 _dueBy,\\n        Multihash calldata _multihash\\n    ) external;\\n\\n    function getCreditor() external view returns (address);\\n\\n    function getDebtor() external view returns (address);\\n}\\n\\ncontract BullaBanker {\\n    address public bullaManager;\\n    mapping(address => BullaTag) public bullaTags;\\n\\n    address public claimImplementation;\\n\\n    event BullaTagUpdated(\\n        address indexed bullaManager,\\n        address indexed bullaClaim,\\n        address indexed updatedBy,\\n        bytes32 creditorTag,\\n        bytes32 debtorTag,\\n        uint256 blocktime\\n    );\\n\\n    event BullaBankerCreated(\\n        address indexed bullaManager,\\n        address bullaBanker,\\n        uint256 blocktime\\n    );\\n\\n    constructor(address _bullaManager, address _claimImplementation) {\\n        bullaManager = _bullaManager;\\n        claimImplementation = _claimImplementation;\\n        emit BullaBankerCreated(bullaManager, address(this), block.timestamp);\\n    }\\n\\n    function createBullaClaim(\\n        uint256 claimAmount,\\n        address payable creditor,\\n        address payable debtor,\\n        string memory description,\\n        bytes32 bullaTag,\\n        uint256 dueBy\\n    ) public {\\n        address newClaimAddress = Clones.clone(claimImplementation);\\n\\n        IBullaClaim(newClaimAddress).init(\\n            bullaManager,\\n            payable(msg.sender),\\n            creditor,\\n            debtor,\\n            description,\\n            claimAmount,\\n            dueBy\\n        );\\n\\n        BullaTag memory newTag;\\n        if (msg.sender == creditor) newTag.creditorTag = bullaTag;\\n        if (msg.sender == debtor) newTag.debtorTag = bullaTag;\\n        bullaTags[newClaimAddress] = newTag;\\n\\n        emit BullaTagUpdated(\\n            bullaManager,\\n            newClaimAddress,\\n            msg.sender,\\n            newTag.creditorTag,\\n            newTag.debtorTag,\\n            block.timestamp\\n        );\\n    }\\n\\n    function createBullaClaimMultihash(\\n        uint256 claimAmount,\\n        address payable creditor,\\n        address payable debtor,\\n        string memory description,\\n        bytes32 bullaTag,\\n        uint256 dueBy,\\n        Multihash calldata multihash\\n    ) external {\\n        address newClaimAddress = Clones.clone(claimImplementation);\\n\\n        IBullaClaim(newClaimAddress).initMultihash(\\n            bullaManager,\\n            payable(msg.sender),\\n            creditor,\\n            debtor,\\n            description,\\n            claimAmount,\\n            dueBy,\\n            multihash\\n        );\\n\\n        BullaTag memory newTag;\\n        if (msg.sender == creditor) newTag.creditorTag = bullaTag;\\n        if (msg.sender == debtor) newTag.debtorTag = bullaTag;\\n        bullaTags[newClaimAddress] = newTag;\\n\\n        emit BullaTagUpdated(\\n            bullaManager,\\n            newClaimAddress,\\n            msg.sender,\\n            newTag.creditorTag,\\n            newTag.debtorTag,\\n            block.timestamp\\n        );\\n    }\\n\\n    function updateBullaTag(address _bullaClaim, bytes32 newTag) public {\\n        IBullaClaim bullaClaim = IBullaClaim(_bullaClaim);\\n        require(\\n            msg.sender == bullaClaim.getCreditor() ||\\n                msg.sender == bullaClaim.getDebtor()\\n        );\\n\\n        if (msg.sender == bullaClaim.getCreditor())\\n            bullaTags[_bullaClaim].creditorTag = newTag;\\n        if (msg.sender == bullaClaim.getDebtor())\\n            bullaTags[_bullaClaim].debtorTag = newTag;\\n\\n        emit BullaTagUpdated(\\n            bullaManager,\\n            address(bullaClaim),\\n            msg.sender,\\n            bullaTags[_bullaClaim].creditorTag,\\n            bullaTags[_bullaClaim].debtorTag,\\n            block.timestamp\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x79bb4c33bfbd9624a4174d068c362de8c87e9e00067e443128349c8c833aa043\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610bfb380380610bfb83398101604081905261002f916100b8565b600080546001600160a01b038481166001600160a01b031992831681179093556002805491851691909216179055604080513081524260208201527f1619502cc577464cafd2a9c68d834339b51934f3e8e684f59374dd5f0f9293d6910160405180910390a250506100ea565b80516001600160a01b03811681146100b357600080fd5b919050565b600080604083850312156100ca578182fd5b6100d38361009c565b91506100e16020840161009c565b90509250929050565b610b02806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635e39986f146100675780639a1309ce14610097578063a4ed46e7146100d3578063c0265a69146100e6578063cbac4cbe146100fb578063ea026b361461010e575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100a53660046107e7565b6001602081905260009182526040909120805491015482565b6040805192835260208301919091520161008e565b60025461007a906001600160a01b031681565b6100f96100f4366004610826565b610121565b005b6100f9610109366004610851565b6103fe565b6100f961011c3660046108cd565b610556565b6000829050806001600160a01b031663f89d1ec06040518163ffffffff1660e01b815260040160206040518083038186803b15801561015f57600080fd5b505afa158015610173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610197919061080a565b6001600160a01b0316336001600160a01b031614806102375750806001600160a01b0316637e78fdb96040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ea57600080fd5b505afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610222919061080a565b6001600160a01b0316336001600160a01b0316145b61024057600080fd5b806001600160a01b031663f89d1ec06040518163ffffffff1660e01b815260040160206040518083038186803b15801561027957600080fd5b505afa15801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b1919061080a565b6001600160a01b0316336001600160a01b031614156102e6576001600160a01b03831660009081526001602052604090208290555b806001600160a01b0316637e78fdb96040518163ffffffff1660e01b815260040160206040518083038186803b15801561031f57600080fd5b505afa158015610333573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610357919061080a565b6001600160a01b0316336001600160a01b03161415610390576001600160a01b0383166000908152600160208190526040909120018290555b600080546001600160a01b0385811683526001602081815260409485902080549201548551928352908201524281850152925133938583169392909216917fb60b66f23d9681f3f299b1cece9abc9d0e08ff6ae3167e573c2c5357342afa91919081900360600190a4505050565b600254600090610416906001600160a01b03166106bf565b6000546040516316929ca960e21b81529192506001600160a01b0380841692635a4a72a49261045592169033908b908b908b908f908b906004016109b2565b600060405180830381600087803b15801561046f57600080fd5b505af1158015610483573d6000803e3d6000fd5b5050604080518082019091526000808252602082015291506104a29050565b336001600160a01b03881614156104b7578381525b336001600160a01b03871614156104d057602081018490525b6001600160a01b038083166000818152600160208181526040808420875180825592880151930183905592549251339593909316927fb60b66f23d9681f3f299b1cece9abc9d0e08ff6ae3167e573c2c5357342afa9192610544929142909283526020830191909152604082015260600190565b60405180910390a45050505050505050565b60025460009061056e906001600160a01b03166106bf565b9050806001600160a01b031663b88887b760008054906101000a90046001600160a01b0316338a8a8a8e8a8a6040518963ffffffff1660e01b81526004016105bd989796959493929190610a04565b600060405180830381600087803b1580156105d757600080fd5b505af11580156105eb573d6000803e3d6000fd5b50506040805180820190915260008082526020820152915061060a9050565b336001600160a01b038916141561061f578481525b336001600160a01b038816141561063857602081018590525b6001600160a01b038083166000818152600160208181526040808420875180825592880151930183905592549251339593909316927fb60b66f23d9681f3f299b1cece9abc9d0e08ff6ae3167e573c2c5357342afa91926106ac929142909283526020830191909152604082015260600190565b60405180910390a4505050505050505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b03811661075b5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640160405180910390fd5b919050565b600082601f830112610770578081fd5b813567ffffffffffffffff8082111561078b5761078b610a9e565b604051601f8301601f19908116603f011681019082821181831017156107b3576107b3610a9e565b816040528381528660208588010111156107cb578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156107f8578081fd5b813561080381610ab4565b9392505050565b60006020828403121561081b578081fd5b815161080381610ab4565b60008060408385031215610838578081fd5b823561084381610ab4565b946020939093013593505050565b60008060008060008060c08789031215610869578182fd5b86359550602087013561087b81610ab4565b9450604087013561088b81610ab4565b9350606087013567ffffffffffffffff8111156108a6578283fd5b6108b289828a01610760565b9350506080870135915060a087013590509295509295509295565b60008060008060008060008789036101208112156108e9578182fd5b8835975060208901356108fb81610ab4565b9650604089013561090b81610ab4565b9550606089013567ffffffffffffffff811115610926578283fd5b6109328b828c01610760565b9550506080890135935060a08901359250606060bf1982011215610954578182fd5b5060c08801905092959891949750929550565b60008151808452815b8181101561098c57602081850181015186830182015201610970565b8181111561099d5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038881168252878116602083015286811660408301528516606082015260e0608082018190526000906109ee90830186610967565b60a08301949094525060c0015295945050505050565b6001600160a01b038981168252888116602083015287811660408301528616606082015261014060808201819052600090610a4183820188610967565b9150508460a08301528360c0830152823560e0830152602083013560ff8116808214610a6c57600080fd5b61010084015250604083013560ff8116808214610a8857600080fd5b8061012085015250509998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ac957600080fd5b5056fea2646970667358221220a19c44f7dfabf00d2722b41e46e00a7c9325338df20acb255bc058d35979abda64736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80635e39986f146100675780639a1309ce14610097578063a4ed46e7146100d3578063c0265a69146100e6578063cbac4cbe146100fb578063ea026b361461010e575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100a53660046107e7565b6001602081905260009182526040909120805491015482565b6040805192835260208301919091520161008e565b60025461007a906001600160a01b031681565b6100f96100f4366004610826565b610121565b005b6100f9610109366004610851565b6103fe565b6100f961011c3660046108cd565b610556565b6000829050806001600160a01b031663f89d1ec06040518163ffffffff1660e01b815260040160206040518083038186803b15801561015f57600080fd5b505afa158015610173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610197919061080a565b6001600160a01b0316336001600160a01b031614806102375750806001600160a01b0316637e78fdb96040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ea57600080fd5b505afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610222919061080a565b6001600160a01b0316336001600160a01b0316145b61024057600080fd5b806001600160a01b031663f89d1ec06040518163ffffffff1660e01b815260040160206040518083038186803b15801561027957600080fd5b505afa15801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b1919061080a565b6001600160a01b0316336001600160a01b031614156102e6576001600160a01b03831660009081526001602052604090208290555b806001600160a01b0316637e78fdb96040518163ffffffff1660e01b815260040160206040518083038186803b15801561031f57600080fd5b505afa158015610333573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610357919061080a565b6001600160a01b0316336001600160a01b03161415610390576001600160a01b0383166000908152600160208190526040909120018290555b600080546001600160a01b0385811683526001602081815260409485902080549201548551928352908201524281850152925133938583169392909216917fb60b66f23d9681f3f299b1cece9abc9d0e08ff6ae3167e573c2c5357342afa91919081900360600190a4505050565b600254600090610416906001600160a01b03166106bf565b6000546040516316929ca960e21b81529192506001600160a01b0380841692635a4a72a49261045592169033908b908b908b908f908b906004016109b2565b600060405180830381600087803b15801561046f57600080fd5b505af1158015610483573d6000803e3d6000fd5b5050604080518082019091526000808252602082015291506104a29050565b336001600160a01b03881614156104b7578381525b336001600160a01b03871614156104d057602081018490525b6001600160a01b038083166000818152600160208181526040808420875180825592880151930183905592549251339593909316927fb60b66f23d9681f3f299b1cece9abc9d0e08ff6ae3167e573c2c5357342afa9192610544929142909283526020830191909152604082015260600190565b60405180910390a45050505050505050565b60025460009061056e906001600160a01b03166106bf565b9050806001600160a01b031663b88887b760008054906101000a90046001600160a01b0316338a8a8a8e8a8a6040518963ffffffff1660e01b81526004016105bd989796959493929190610a04565b600060405180830381600087803b1580156105d757600080fd5b505af11580156105eb573d6000803e3d6000fd5b50506040805180820190915260008082526020820152915061060a9050565b336001600160a01b038916141561061f578481525b336001600160a01b038816141561063857602081018590525b6001600160a01b038083166000818152600160208181526040808420875180825592880151930183905592549251339593909316927fb60b66f23d9681f3f299b1cece9abc9d0e08ff6ae3167e573c2c5357342afa91926106ac929142909283526020830191909152604082015260600190565b60405180910390a4505050505050505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b03811661075b5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640160405180910390fd5b919050565b600082601f830112610770578081fd5b813567ffffffffffffffff8082111561078b5761078b610a9e565b604051601f8301601f19908116603f011681019082821181831017156107b3576107b3610a9e565b816040528381528660208588010111156107cb578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156107f8578081fd5b813561080381610ab4565b9392505050565b60006020828403121561081b578081fd5b815161080381610ab4565b60008060408385031215610838578081fd5b823561084381610ab4565b946020939093013593505050565b60008060008060008060c08789031215610869578182fd5b86359550602087013561087b81610ab4565b9450604087013561088b81610ab4565b9350606087013567ffffffffffffffff8111156108a6578283fd5b6108b289828a01610760565b9350506080870135915060a087013590509295509295509295565b60008060008060008060008789036101208112156108e9578182fd5b8835975060208901356108fb81610ab4565b9650604089013561090b81610ab4565b9550606089013567ffffffffffffffff811115610926578283fd5b6109328b828c01610760565b9550506080890135935060a08901359250606060bf1982011215610954578182fd5b5060c08801905092959891949750929550565b60008151808452815b8181101561098c57602081850181015186830182015201610970565b8181111561099d5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038881168252878116602083015286811660408301528516606082015260e0608082018190526000906109ee90830186610967565b60a08301949094525060c0015295945050505050565b6001600160a01b038981168252888116602083015287811660408301528616606082015261014060808201819052600090610a4183820188610967565b9150508460a08301528360c0830152823560e0830152602083013560ff8116808214610a6c57600080fd5b61010084015250604083013560ff8116808214610a8857600080fd5b8061012085015250509998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ac957600080fd5b5056fea2646970667358221220a19c44f7dfabf00d2722b41e46e00a7c9325338df20acb255bc058d35979abda64736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1382,
        "contract": "contracts/BullaBanker.sol:BullaBanker",
        "label": "bullaManager",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1387,
        "contract": "contracts/BullaBanker.sol:BullaBanker",
        "label": "bullaTags",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(BullaTag)1325_storage)"
      },
      {
        "astId": 1389,
        "contract": "contracts/BullaBanker.sol:BullaBanker",
        "label": "claimImplementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(BullaTag)1325_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BullaTag)",
        "numberOfBytes": "32",
        "value": "t_struct(BullaTag)1325_storage"
      },
      "t_struct(BullaTag)1325_storage": {
        "encoding": "inplace",
        "label": "struct BullaTag",
        "members": [
          {
            "astId": 1322,
            "contract": "contracts/BullaBanker.sol:BullaBanker",
            "label": "creditorTag",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 1324,
            "contract": "contracts/BullaBanker.sol:BullaBanker",
            "label": "debtorTag",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}