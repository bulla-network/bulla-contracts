{
  "address": "0x706b2Db812C8d340A166764eA2CFD23F6743C478",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaClaim",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum BullaClaim.ActionType",
          "name": "actionType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "ClaimAction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bullaClaim",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dueBy",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "ClaimCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaClaim",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trasferPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "ClaimTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaClaim",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collectionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transactionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "FeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bullaClaim",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "debtor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creditor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "hashFunction",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "size",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct BullaClaim.Multihash",
          "name": "ipfsHash",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "MultihashAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bullaClaim",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocktime",
          "type": "uint256"
        }
      ],
      "name": "TransferPriceUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "hashFunction",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "addMultihash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dueBy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCreditor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDebtor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bullaManager",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_creditor",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_debtor",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dueBy",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multihash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "hashFunction",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paidAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rejectClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rescindClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setTransferPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "internalType": "enum BullaClaim.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xabc4670c8a755757646d58f8260f07152ea9a0117b955068efc4d8c0f5a18810",
  "receipt": {
    "to": null,
    "from": "0x3b6Ac45817b3bB0544C19412Fbe8B022D0a4db61",
    "contractAddress": "0x706b2Db812C8d340A166764eA2CFD23F6743C478",
    "transactionIndex": 17,
    "gasUsed": "1051086",
    "logsBloom": "0x
    "blockHash": "0xdd0a40dc5dff1936f527d5a777e6273e6a7d652009a5c71b37795985611f2ae0",
    "transactionHash": "0xabc4670c8a755757646d58f8260f07152ea9a0117b955068efc4d8c0f5a18810",
    "logs": [],
    "blockNumber": 9126261,
    "cumulativeGasUsed": "7135147",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "329f5615c573ded6f1ab86986788ab0e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaClaim\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum BullaClaim.ActionType\",\"name\":\"actionType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"ClaimAction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bullaClaim\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dueBy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"ClaimCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaClaim\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trasferPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"ClaimTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaClaim\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"FeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bullaClaim\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creditor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"hashFunction\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct BullaClaim.Multihash\",\"name\":\"ipfsHash\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"MultihashAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bullaClaim\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"TransferPriceUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"hashFunction\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"name\":\"addMultihash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dueBy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreditor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDebtor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bullaManager\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_creditor\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_debtor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dueBy\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multihash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"hashFunction\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paidAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rejectClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescindClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setTransferPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum BullaClaim.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BullaClaim.sol\":\"BullaClaim\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"contracts/BullaClaim.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.3;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\r\\n\\r\\ninterface IBullaManager {\\r\\n    function getBullaBalance(address _holder) external view returns (uint256);\\r\\n\\r\\n    function getFeeInfo()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address payable collectionAddress,\\r\\n            uint32 feeBasisPoints,\\r\\n            uint32 bullaThreshold, //# of BULLA tokens held to get fee reduction\\r\\n            uint32 reducedFeeBasisPoints\\r\\n        );\\r\\n}\\r\\n\\r\\ncontract BullaClaim is Initializable {\\r\\n    enum ActionType {\\r\\n        Payment,\\r\\n        Reject,\\r\\n        Rescind\\r\\n    }\\r\\n    enum Status {\\r\\n        Pending,\\r\\n        Repaying,\\r\\n        Paid,\\r\\n        Rejected,\\r\\n        Rescinded\\r\\n    }\\r\\n\\r\\n    //https://medium.com/temporal-cloud/efficient-usable-and-cheap-storage-of-ipfs-hashes-in-solidity-smart-contracts-eb3bef129eba\\r\\n    //structure for storing IPFS hash that may hold documents\\r\\n    struct Multihash {\\r\\n        bytes32 hash;\\r\\n        uint8 hashFunction;\\r\\n        uint8 size;\\r\\n    }\\r\\n    Multihash public multihash;\\r\\n\\r\\n    IBullaManager internal bullaManager;\\r\\n    address payable public owner; //current owner of claim\\r\\n    address payable creditor;\\r\\n    address payable debtor;\\r\\n\\r\\n    uint256 public claimAmount;\\r\\n    uint256 public dueBy;\\r\\n    uint256 public paidAmount;\\r\\n    Status public status;\\r\\n    bool isInitialized;\\r\\n\\r\\n    //current price that owner is willing to transfer claim\\r\\n    uint256 public transferPrice;\\r\\n\\r\\n    modifier onlyCreditor() {\\r\\n        require(creditor == msg.sender, \\\"restricted to creditor\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyDebtor() {\\r\\n        require(debtor == msg.sender, \\\"restricted to debtor\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"restricted to owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    event ClaimAction(\\r\\n        address indexed bullaManager,\\r\\n        address indexed bullaClaim,\\r\\n        ActionType actionType,\\r\\n        uint256 paymentAmount,\\r\\n        uint256 blocktime\\r\\n    );\\r\\n\\r\\n    event FeePaid(\\r\\n        address indexed bullaManager,\\r\\n        address indexed bullaClaim,\\r\\n        address indexed collectionAddress,\\r\\n        uint256 transactionFee,\\r\\n        uint256 blocktime\\r\\n    );\\r\\n\\r\\n    event MultihashAdded(\\r\\n        address indexed bullaManager,\\r\\n        address bullaClaim,\\r\\n        address indexed debtor,\\r\\n        address indexed creditor,\\r\\n        Multihash ipfsHash,\\r\\n        uint256 blocktime\\r\\n    );\\r\\n\\r\\n    event TransferPriceUpdated(\\r\\n        address indexed bullaClaim,\\r\\n        uint256 oldPrice,\\r\\n        uint256 newPrice,\\r\\n        uint256 blocktime\\r\\n    );\\r\\n\\r\\n    event ClaimTransferred(\\r\\n        address indexed bullaClaim,\\r\\n        address indexed oldOwner,\\r\\n        address indexed newOwner,\\r\\n        uint256 trasferPrice,\\r\\n        uint256 blocktime\\r\\n    );\\r\\n\\r\\n    event ClaimCreated(\\r\\n        address indexed bullaManager,\\r\\n        address bullaClaim,\\r\\n        address owner,\\r\\n        address indexed creditor,\\r\\n        address indexed debtor,\\r\\n        string description,\\r\\n        uint256 claimAmount,\\r\\n        uint256 dueBy,\\r\\n        address createdBy,\\r\\n        uint256 blocktime\\r\\n    );\\r\\n\\r\\n    function init(\\r\\n        address _bullaManager,\\r\\n        address payable _owner,\\r\\n        address payable _creditor,\\r\\n        address payable _debtor,\\r\\n        string memory _description,\\r\\n        uint256 _claimAmount,\\r\\n        uint256 _dueBy\\r\\n    ) external {\\r\\n        require(\\r\\n            _owner == _creditor || _owner == _debtor,\\r\\n            \\\"owner not a debtor or creditor\\\"\\r\\n        );\\r\\n        require(!isInitialized, \\\"already initialized\\\");\\r\\n\\r\\n        isInitialized = true;\\r\\n        bullaManager = IBullaManager(_bullaManager);\\r\\n        owner = _owner;\\r\\n        creditor = _creditor;\\r\\n        debtor = _debtor;\\r\\n        claimAmount = _claimAmount;\\r\\n        dueBy = _dueBy;\\r\\n\\r\\n        emit ClaimCreated(\\r\\n            _bullaManager,\\r\\n            address(this),\\r\\n            owner,\\r\\n            creditor,\\r\\n            debtor,\\r\\n            _description,\\r\\n            claimAmount,\\r\\n            dueBy,\\r\\n            msg.sender,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setTransferPrice(uint256 newPrice) external onlyOwner {\\r\\n        require(owner == creditor, \\\"only owner can set price\\\");\\r\\n        uint256 oldPrice = transferPrice;\\r\\n        transferPrice = newPrice;\\r\\n        emit TransferPriceUpdated(\\r\\n            address(this),\\r\\n            oldPrice,\\r\\n            newPrice,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address payable newOwner) external payable {\\r\\n        require(owner == creditor, \\\"only invoices can be transferred\\\");\\r\\n        require(\\r\\n            transferPrice > 0 || msg.sender == owner,\\r\\n            \\\"this claim is not transferable by anyone other than owner\\\"\\r\\n        );\\r\\n        require(\\r\\n            msg.value == transferPrice,\\r\\n            \\\"incorrect msg.value to transfer ownership\\\"\\r\\n        );\\r\\n\\r\\n        owner.transfer(msg.value);\\r\\n        address oldOwner = owner;\\r\\n        owner = newOwner;\\r\\n        creditor = newOwner;\\r\\n        transferPrice = 0;\\r\\n\\r\\n        emit ClaimTransferred(\\r\\n            address(this),\\r\\n            oldOwner,\\r\\n            newOwner,\\r\\n            msg.value,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addMultihash(\\r\\n        bytes32 hash,\\r\\n        uint8 hashFunction,\\r\\n        uint8 size\\r\\n    ) external onlyOwner {\\r\\n        multihash = Multihash(hash, hashFunction, size);\\r\\n        emit MultihashAdded(\\r\\n            address(bullaManager),\\r\\n            address(this),\\r\\n            creditor,\\r\\n            debtor,\\r\\n            multihash,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function emitActionEvent(ActionType actionType, uint256 _paymentAmount)\\r\\n        internal\\r\\n    {\\r\\n        emit ClaimAction(\\r\\n            address(bullaManager),\\r\\n            address(this),\\r\\n            actionType,\\r\\n            _paymentAmount,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function payClaim() external payable onlyDebtor {\\r\\n        require(paidAmount + msg.value <= claimAmount, \\\"repaying too much\\\");\\r\\n        require(msg.value > 0, \\\"payment must be greater than 0\\\");\\r\\n\\r\\n        uint256 bullaTokenBalance = bullaManager.getBullaBalance(owner);\\r\\n        (\\r\\n            address payable collectionAddress,\\r\\n            uint32 fullFee,\\r\\n            uint32 bullaThreshold,\\r\\n            uint32 reducedFeeBasisPoints\\r\\n        ) = bullaManager.getFeeInfo();\\r\\n\\r\\n        uint32 fee = bullaThreshold > 0 && bullaTokenBalance >= bullaThreshold\\r\\n            ? reducedFeeBasisPoints\\r\\n            : fullFee;\\r\\n\\r\\n        uint256 transactionFee = fee > 0\\r\\n            ? (msg.value * fee) / 10000 //calculateFee(feeBasisPoints, msg.value)\\r\\n            : 0;\\r\\n\\r\\n        //DOES this protect against re-entrancy? moved effect before transfer\\r\\n        paidAmount += msg.value;\\r\\n        paidAmount == claimAmount ? status = Status.Paid : status = Status\\r\\n            .Repaying;\\r\\n        creditor.transfer(msg.value - transactionFee);\\r\\n        emitActionEvent(ActionType.Payment, claimAmount);\\r\\n\\r\\n        if (transactionFee > 0) {\\r\\n            collectionAddress.transfer(transactionFee);\\r\\n        }\\r\\n        emit FeePaid(\\r\\n            address(bullaManager),\\r\\n            address(this),\\r\\n            collectionAddress,\\r\\n            transactionFee,\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function rejectClaim() external payable onlyDebtor {\\r\\n        require(\\r\\n            status == Status.Pending,\\r\\n            \\\"cannot reject once payment has been made\\\"\\r\\n        );\\r\\n        status = Status.Rejected;\\r\\n        emitActionEvent(ActionType.Reject, 0);\\r\\n    }\\r\\n\\r\\n    function rescindClaim() external payable onlyCreditor {\\r\\n        require(\\r\\n            status == Status.Pending,\\r\\n            \\\"cannot rescind once payment has been made\\\"\\r\\n        );\\r\\n        status = Status.Rescinded;\\r\\n        emitActionEvent(ActionType.Rescind, 0);\\r\\n    }\\r\\n\\r\\n    function getCreditor() external view returns (address) {\\r\\n        return creditor;\\r\\n    }\\r\\n\\r\\n    function getDebtor() external view returns (address) {\\r\\n        return debtor;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xeb3e381ab64d9e439712099920c5a7cca4c3b7e5c48f46e8566d8c65e1a16b21\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80637e78fdb91161008a5780639a5870b3116100595780639a5870b314610240578063b075bdfa14610256578063f2fde38b1461029c578063f89d1ec0146102af576100f3565b80637e78fdb9146101c257806381cd8194146101f4578063830953ab1461020a5780638da5cb5b14610220576100f3565b8063264c74a5116100c6578063264c74a5146101725780635a4a72a4146101925780636271a581146101b257806371ad9ca3146101ba576100f3565b80630bd7693d146100f8578063103888091461010257806312fa769f14610122578063200d2ed21461014b575b600080fd5b6101006102cd565b005b34801561010e57600080fd5b5061010061011d366004610ffe565b61066b565b34801561012e57600080fd5b5061013860095481565b6040519081526020015b60405180910390f35b34801561015757600080fd5b50600a546101659060ff1681565b60405161014291906110f5565b34801561017e57600080fd5b5061010061018d366004610fc3565b610769565b34801561019e57600080fd5b506101006101ad366004610eba565b610875565b6101006109e5565b610100610ad9565b3480156101ce57600080fd5b506006546001600160a01b03165b6040516001600160a01b039091168152602001610142565b34801561020057600080fd5b50610138600b5481565b34801561021657600080fd5b5061013860075481565b34801561022c57600080fd5b506004546101dc906001600160a01b031681565b34801561024c57600080fd5b5061013860085481565b34801561026257600080fd5b5060015460025461027d919060ff8082169161010090041683565b6040805193845260ff9283166020850152911690820152606001610142565b6101006102aa366004610e42565b610bc8565b3480156102bb57600080fd5b506005546001600160a01b03166101dc565b6006546001600160a01b031633146103235760405162461bcd60e51b81526020600482015260146024820152733932b9ba3934b1ba32b2103a37903232b13a37b960611b60448201526064015b60405180910390fd5b60075434600954610334919061110f565b11156103765760405162461bcd60e51b81526020600482015260116024820152700e4cae0c2f2d2dcce40e8dede40daeac6d607b1b604482015260640161031a565b600034116103c65760405162461bcd60e51b815260206004820152601e60248201527f7061796d656e74206d7573742062652067726561746572207468616e20300000604482015260640161031a565b60035460048054604051630309e65b60e01b81526001600160a01b03918216928101929092526000921690630309e65b9060240160206040518083038186803b15801561041257600080fd5b505afa158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a9190611016565b9050600080600080600360009054906101000a90046001600160a01b03166001600160a01b03166202eab76040518163ffffffff1660e01b815260040160806040518083038186803b15801561049f57600080fd5b505afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d79190610e65565b93509350935093506000808363ffffffff161180156104fc57508263ffffffff168610155b6105065783610508565b815b90506000808263ffffffff161161052057600061053d565b61271061053363ffffffff841634611147565b61053d9190611127565b90503460096000828254610551919061110f565b90915550506007546009541461057657600a805460ff19166001908117909155610587565b600a805460ff191660029081179091555b506005546001600160a01b03166108fc6105a18334611166565b6040518115909202916000818181858888f193505050501580156105c9573d6000803e3d6000fd5b506105d76000600754610dc9565b8015610615576040516001600160a01b0387169082156108fc029083906000818181858888f19350505050158015610613573d6000803e3d6000fd5b505b600354604080518381524260208201526001600160a01b038981169330939116917f7b025f69f5843a875988abc4e248350e4e5d0ec876e181973034e7a5c5bad88491015b60405180910390a450505050505050565b6004546001600160a01b031633146106bb5760405162461bcd60e51b81526020600482015260136024820152723932b9ba3934b1ba32b2103a379037bbb732b960691b604482015260640161031a565b6005546004546001600160a01b0390811691161461071b5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c79206f776e65722063616e207365742070726963650000000000000000604482015260640161031a565b600b80549082905560408051828152602081018490524281830152905130917fad58c87bad083af5840976457eaf3e6ebfab644c0fba0250f991295f5e7e9e35919081900360600190a25050565b6004546001600160a01b031633146107b95760405162461bcd60e51b81526020600482015260136024820152723932b9ba3934b1ba32b2103a379037bbb732b960691b604482015260640161031a565b604080516060808201835285825260ff858116602080850182905286831694860185905260018990556002805461ffff1916909217610100909502949094179081905560065460055460035487513081529687018b90528385169787019790975260089290921c909216928401929092524260808401526001600160a01b0390811693918116929116907fd1c3701da1341446fa54b86557e14f0addb0998e5d06e2cd0a70166f4c2b31a29060a00160405180910390a4505050565b846001600160a01b0316866001600160a01b031614806108a65750836001600160a01b0316866001600160a01b0316145b6108f25760405162461bcd60e51b815260206004820152601e60248201527f6f776e6572206e6f74206120646562746f72206f72206372656469746f720000604482015260640161031a565b600a54610100900460ff16156109405760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161031a565b600a805461ff001916610100179055600380546001600160a01b03808a166001600160a01b03199283168117909355600480548a83169084168117909155600580548a8416908516811790915560068054938a16939094168317909355600786905560088590556040519193917f31e4f7f4b87db25285946b26f7f557c9f2c6ca38c4e43506d02d14aad47bd66b9161065a913091908a908a908a903390429061102e565b6005546001600160a01b03163314610a385760405162461bcd60e51b81526020600482015260166024820152753932b9ba3934b1ba32b2103a379031b932b234ba37b960511b604482015260640161031a565b6000600a5460ff166004811115610a5f57634e487b7160e01b600052602160045260246000fd5b14610abe5760405162461bcd60e51b815260206004820152602960248201527f63616e6e6f742072657363696e64206f6e6365207061796d656e7420686173206044820152686265656e206d61646560b81b606482015260840161031a565b600a805460ff19166004179055610ad760026000610dc9565b565b6006546001600160a01b03163314610b2a5760405162461bcd60e51b81526020600482015260146024820152733932b9ba3934b1ba32b2103a37903232b13a37b960611b604482015260640161031a565b6000600a5460ff166004811115610b5157634e487b7160e01b600052602160045260246000fd5b14610baf5760405162461bcd60e51b815260206004820152602860248201527f63616e6e6f742072656a656374206f6e6365207061796d656e7420686173206260448201526765656e206d61646560c01b606482015260840161031a565b600a805460ff19166003179055610ad760016000610dc9565b6005546004546001600160a01b03908116911614610c285760405162461bcd60e51b815260206004820181905260248201527f6f6e6c7920696e766f696365732063616e206265207472616e73666572726564604482015260640161031a565b6000600b541180610c4357506004546001600160a01b031633145b610cb55760405162461bcd60e51b815260206004820152603960248201527f7468697320636c61696d206973206e6f74207472616e7366657261626c65206260448201527f7920616e796f6e65206f74686572207468616e206f776e657200000000000000606482015260840161031a565b600b543414610d185760405162461bcd60e51b815260206004820152602960248201527f696e636f7272656374206d73672e76616c756520746f207472616e736665722060448201526806f776e6572736869760bc1b606482015260840161031a565b6004546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610d51573d6000803e3d6000fd5b50600480546001600160a01b038381166001600160a01b031980841682179094556005805490941681179093556000600b5560408051348152426020820152919092169291839130917fc432da71cf07ddca9b6990a60d74e7cc2550a93bc44787d381aa5eca20a93b99910160405180910390a45050565b60035460405130916001600160a01b0316907f5fa0bf8a0d51e5081a34aebd515108b75f68dcf92eec17a40580723b7ec4aa3a90610e0c908690869042906110cd565b60405180910390a35050565b805163ffffffff81168114610e2c57600080fd5b919050565b803560ff81168114610e2c57600080fd5b600060208284031215610e53578081fd5b8135610e5e816111bf565b9392505050565b60008060008060808587031215610e7a578283fd5b8451610e85816111bf565b9350610e9360208601610e18565b9250610ea160408601610e18565b9150610eaf60608601610e18565b905092959194509250565b600080600080600080600060e0888a031215610ed4578283fd5b8735610edf816111bf565b96506020880135610eef816111bf565b95506040880135610eff816111bf565b94506060880135610f0f816111bf565b9350608088013567ffffffffffffffff80821115610f2b578485fd5b818a0191508a601f830112610f3e578485fd5b813581811115610f5057610f506111a9565b604051601f8201601f19908116603f01168101908382118183101715610f7857610f786111a9565b816040528281528d6020848701011115610f90578788fd5b8260208601602083013791820160200196909652989b979a50959894979660a0860135965060c090950135949350505050565b600080600060608486031215610fd7578283fd5b83359250610fe760208501610e31565b9150610ff560408501610e31565b90509250925092565b60006020828403121561100f578081fd5b5035919050565b600060208284031215611027578081fd5b5051919050565b600060018060a01b03808a1683526020818a168185015260e06040850152885191508160e0850152825b828110156110755789810182015185820161010001528101611058565b82811115611087578361010084870101525b50506060830187905260808301869052601f01601f191682016101000190506110bb60a08301856001600160a01b03169052565b8260c083015298975050505050505050565b60608101600385106110e1576110e1611193565b938152602081019290925260409091015290565b602081016005831061110957611109611193565b91905290565b600082198211156111225761112261117d565b500190565b60008261114257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156111615761116161117d565b500290565b6000828210156111785761117861117d565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146111d457600080fd5b5056fea26469706673582212204470f5699db912ec434339292da0b106c063d37f474bf03104d30993498b443264736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 85,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 88,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 519,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "multihash",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Multihash)516_storage"
      },
      {
        "astId": 522,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "bullaManager",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IBullaManager)497"
      },
      {
        "astId": 524,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "owner",
        "offset": 0,
        "slot": "4",
        "type": "t_address_payable"
      },
      {
        "astId": 526,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "creditor",
        "offset": 0,
        "slot": "5",
        "type": "t_address_payable"
      },
      {
        "astId": 528,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "debtor",
        "offset": 0,
        "slot": "6",
        "type": "t_address_payable"
      },
      {
        "astId": 530,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "claimAmount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 532,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "dueBy",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 534,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "paidAmount",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 537,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "status",
        "offset": 0,
        "slot": "10",
        "type": "t_enum(Status)509"
      },
      {
        "astId": 539,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "isInitialized",
        "offset": 1,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 541,
        "contract": "contracts/BullaClaim.sol:BullaClaim",
        "label": "transferPrice",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IBullaManager)497": {
        "encoding": "inplace",
        "label": "contract IBullaManager",
        "numberOfBytes": "20"
      },
      "t_enum(Status)509": {
        "encoding": "inplace",
        "label": "enum BullaClaim.Status",
        "numberOfBytes": "1"
      },
      "t_struct(Multihash)516_storage": {
        "encoding": "inplace",
        "label": "struct BullaClaim.Multihash",
        "members": [
          {
            "astId": 511,
            "contract": "contracts/BullaClaim.sol:BullaClaim",
            "label": "hash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 513,
            "contract": "contracts/BullaClaim.sol:BullaClaim",
            "label": "hashFunction",
            "offset": 0,
            "slot": "1",
            "type": "t_uint8"
          },
          {
            "astId": 515,
            "contract": "contracts/BullaClaim.sol:BullaClaim",
            "label": "size",
            "offset": 1,
            "slot": "1",
            "type": "t_uint8"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}